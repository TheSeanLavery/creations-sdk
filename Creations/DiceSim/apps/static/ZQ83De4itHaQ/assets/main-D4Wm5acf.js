(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class on{constructor(){this.screenWidth=240}setupViewport(){let t=document.querySelector('meta[name="viewport"]');t||(t=document.createElement("meta"),t.name="viewport",document.head.appendChild(t)),t.content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"}}const rn=new on;class cn{constructor(){this.sideButtonEnabled=!0,this.scrollWheelEnabled=!0,this.eventListeners=new Map}init(t={}){this.sideButtonEnabled=t.sideButtonEnabled??!0,this.scrollWheelEnabled=t.scrollWheelEnabled??!0,this.sideButtonEnabled&&this.setupSideButtonListener(),this.scrollWheelEnabled&&this.setupScrollWheelListener(),t.keyboardFallback!==!1&&this.setupKeyboardFallback()}setupSideButtonListener(){window.addEventListener("sideClick",t=>{this.sideButtonEnabled&&this.handleSideButtonClick(t)})}setupScrollWheelListener(){window.addEventListener("scrollUp",t=>{this.scrollWheelEnabled&&this.handleScrollWheel({direction:"up",event:t})}),window.addEventListener("scrollDown",t=>{this.scrollWheelEnabled&&this.handleScrollWheel({direction:"down",event:t})})}setupKeyboardFallback(){window.addEventListener("keydown",t=>{if(t.code==="Space"){t.preventDefault();const e=new CustomEvent("sideClick",{detail:{source:"keyboard"}});window.dispatchEvent(e)}})}handleSideButtonClick(t){(this.eventListeners.get("sideButton")||[]).forEach(n=>n(t))}handleScrollWheel(t){(this.eventListeners.get("scrollWheel")||[]).forEach(n=>n({direction:t.direction,event:t.event}))}on(t,e){this.eventListeners.has(t)||this.eventListeners.set(t,[]),this.eventListeners.get(t).push(e)}off(t,e){const n=this.eventListeners.get(t)||[],s=n.indexOf(e);s>-1&&n.splice(s,1)}}const re=new cn;function ln(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function an(w,t){const e=new Float32Array(16);for(let n=0;n<4;n++){const s=w[n],i=w[n+4],o=w[n+8],r=w[n+12];e[n]=s*t[0]+i*t[1]+o*t[2]+r*t[3],e[n+4]=s*t[4]+i*t[5]+o*t[6]+r*t[7],e[n+8]=s*t[8]+i*t[9]+o*t[10]+r*t[11],e[n+12]=s*t[12]+i*t[13]+o*t[14]+r*t[15]}return e}function hn(w,t,e,n){const s=1/Math.tan(w/2),i=1/(e-n),o=new Float32Array(16);return o[0]=s/t,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=s,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=(n+e)*i,o[11]=-1,o[12]=0,o[13]=0,o[14]=2*n*e*i,o[15]=0,o}function dn(w,t){const[e,n,s]=t,i=w.slice(0);return i[12]=w[0]*e+w[4]*n+w[8]*s+w[12],i[13]=w[1]*e+w[5]*n+w[9]*s+w[13],i[14]=w[2]*e+w[6]*n+w[10]*s+w[14],i[15]=w[3]*e+w[7]*n+w[11]*s+w[15],i}class nt{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new l);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new l);const n=this.elements,s=t.x,i=t.y,o=t.z;return e.x=n[0]*s+n[1]*i+n[2]*o,e.y=n[3]*s+n[4]*i+n[5]*o,e.z=n[6]*s+n[7]*i+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new nt);const n=this.elements,s=t.elements,i=e.elements,o=n[0],r=n[1],c=n[2],a=n[3],d=n[4],u=n[5],h=n[6],p=n[7],v=n[8],m=s[0],y=s[1],x=s[2],f=s[3],g=s[4],b=s[5],z=s[6],C=s[7],F=s[8];return i[0]=o*m+r*f+c*z,i[1]=o*y+r*g+c*C,i[2]=o*x+r*b+c*F,i[3]=a*m+d*f+u*z,i[4]=a*y+d*g+u*C,i[5]=a*x+d*b+u*F,i[6]=h*m+p*f+v*z,i[7]=h*y+p*g+v*C,i[8]=h*x+p*b+v*F,e}scale(t,e){e===void 0&&(e=new nt);const n=this.elements,s=e.elements;for(let i=0;i!==3;i++)s[3*i+0]=t.x*n[3*i+0],s[3*i+1]=t.y*n[3*i+1],s[3*i+2]=t.z*n[3*i+2];return e}solve(t,e){e===void 0&&(e=new l);const n=3,s=4,i=[];let o,r;for(o=0;o<n*s;o++)i.push(0);for(o=0;o<3;o++)for(r=0;r<3;r++)i[o+s*r]=this.elements[o+3*r];i[3+4*0]=t.x,i[3+4*1]=t.y,i[3+4*2]=t.z;let c=3;const a=c;let d;const u=4;let h;do{if(o=a-c,i[o+s*o]===0){for(r=o+1;r<a;r++)if(i[o+s*r]!==0){d=u;do h=u-d,i[h+s*o]+=i[h+s*r];while(--d);break}}if(i[o+s*o]!==0)for(r=o+1;r<a;r++){const p=i[o+s*r]/i[o+s*o];d=u;do h=u-d,i[h+s*r]=h<=o?0:i[h+s*r]-i[h+s*o]*p;while(--d)}}while(--c);if(e.z=i[2*s+3]/i[2*s+2],e.y=(i[1*s+3]-i[1*s+2]*e.z)/i[1*s+1],e.x=(i[0*s+3]-i[0*s+2]*e.z-i[0*s+1]*e.y)/i[0*s+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new nt);const e=3,n=6,s=un;let i,o;for(i=0;i<3;i++)for(o=0;o<3;o++)s[i+n*o]=this.elements[i+3*o];s[3+6*0]=1,s[3+6*1]=0,s[3+6*2]=0,s[4+6*0]=0,s[4+6*1]=1,s[4+6*2]=0,s[5+6*0]=0,s[5+6*1]=0,s[5+6*2]=1;let r=3;const c=r;let a;const d=n;let u;do{if(i=c-r,s[i+n*i]===0){for(o=i+1;o<c;o++)if(s[i+n*o]!==0){a=d;do u=d-a,s[u+n*i]+=s[u+n*o];while(--a);break}}if(s[i+n*i]!==0)for(o=i+1;o<c;o++){const h=s[i+n*o]/s[i+n*i];a=d;do u=d-a,s[u+n*o]=u<=i?0:s[u+n*o]-s[u+n*i]*h;while(--a)}}while(--r);i=2;do{o=i-1;do{const h=s[i+n*o]/s[i+n*i];a=n;do u=n-a,s[u+n*o]=s[u+n*o]-s[u+n*i]*h;while(--a)}while(o--)}while(--i);i=2;do{const h=1/s[i+n*i];a=n;do u=n-a,s[u+n*i]=s[u+n*i]*h;while(--a)}while(i--);i=2;do{o=2;do{if(u=s[e+o+n*i],isNaN(u)||u===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,o,u)}while(o--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,s=t.z,i=t.w,o=e+e,r=n+n,c=s+s,a=e*o,d=e*r,u=e*c,h=n*r,p=n*c,v=s*c,m=i*o,y=i*r,x=i*c,f=this.elements;return f[3*0+0]=1-(h+v),f[3*0+1]=d-x,f[3*0+2]=u+y,f[3*1+0]=d+x,f[3*1+1]=1-(a+v),f[3*1+2]=p-m,f[3*2+0]=u-y,f[3*2+1]=p+m,f[3*2+2]=1-(a+h),this}transpose(t){t===void 0&&(t=new nt);const e=this.elements,n=t.elements;let s;return n[0]=e[0],n[4]=e[4],n[8]=e[8],s=e[1],n[1]=e[3],n[3]=s,s=e[2],n[2]=e[6],n[6]=s,s=e[5],n[5]=e[7],n[7]=s,t}}const un=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class l{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new l);const n=t.x,s=t.y,i=t.z,o=this.x,r=this.y,c=this.z;return e.x=r*i-c*s,e.y=c*n-o*i,e.z=o*s-r*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new l(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new l(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new nt([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,s=Math.sqrt(t*t+e*e+n*n);if(s>0){const i=1/s;this.x*=i,this.y*=i,this.z*=i}else this.x=0,this.y=0,this.z=0;return s}unit(t){t===void 0&&(t=new l);const e=this.x,n=this.y,s=this.z;let i=Math.sqrt(e*e+n*n+s*s);return i>0?(i=1/i,t.x=e*i,t.y=n*i,t.z=s*i):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,s=this.z,i=t.x,o=t.y,r=t.z;return Math.sqrt((i-e)*(i-e)+(o-n)*(o-n)+(r-s)*(r-s))}distanceSquared(t){const e=this.x,n=this.y,s=this.z,i=t.x,o=t.y,r=t.z;return(i-e)*(i-e)+(o-n)*(o-n)+(r-s)*(r-s)}scale(t,e){e===void 0&&(e=new l);const n=this.x,s=this.y,i=this.z;return e.x=t*n,e.y=t*s,e.z=t*i,e}vmul(t,e){return e===void 0&&(e=new l),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new l),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new l),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const s=pn,i=1/n;s.set(this.x*i,this.y*i,this.z*i);const o=fn;Math.abs(s.x)<.9?(o.set(1,0,0),s.cross(o,t)):(o.set(0,1,0),s.cross(o,t)),s.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const s=this.x,i=this.y,o=this.z;n.x=s+(t.x-s)*e,n.y=i+(t.y-i)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(ue),ue.almostEquals(t,e)}clone(){return new l(this.x,this.y,this.z)}}l.ZERO=new l(0,0,0);l.UNIT_X=new l(1,0,0);l.UNIT_Y=new l(0,1,0);l.UNIT_Z=new l(0,0,1);const pn=new l,fn=new l,ue=new l;class tt{constructor(t){t===void 0&&(t={}),this.lowerBound=new l,this.upperBound=new l,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,s){const i=this.lowerBound,o=this.upperBound,r=n;i.copy(t[0]),r&&r.vmult(i,i),o.copy(i);for(let c=1;c<t.length;c++){let a=t[c];r&&(r.vmult(a,pe),a=pe),a.x>o.x&&(o.x=a.x),a.x<i.x&&(i.x=a.x),a.y>o.y&&(o.y=a.y),a.y<i.y&&(i.y=a.y),a.z>o.z&&(o.z=a.z),a.z<i.z&&(i.z=a.z)}return e&&(e.vadd(i,i),e.vadd(o,o)),s&&(i.x-=s,i.y-=s,i.z-=s,o.x+=s,o.y+=s,o.z+=s),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new tt().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,s=t.lowerBound,i=t.upperBound,o=s.x<=n.x&&n.x<=i.x||e.x<=i.x&&i.x<=n.x,r=s.y<=n.y&&n.y<=i.y||e.y<=i.y&&i.y<=n.y,c=s.z<=n.z&&n.z<=i.z||e.z<=i.z&&i.z<=n.z;return o&&r&&c}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,s=t.lowerBound,i=t.upperBound;return e.x<=s.x&&n.x>=i.x&&e.y<=s.y&&n.y>=i.y&&e.z<=s.z&&n.z>=i.z}getCorners(t,e,n,s,i,o,r,c){const a=this.lowerBound,d=this.upperBound;t.copy(a),e.set(d.x,a.y,a.z),n.set(d.x,d.y,a.z),s.set(a.x,d.y,d.z),i.set(d.x,a.y,d.z),o.set(a.x,d.y,a.z),r.set(a.x,a.y,d.z),c.copy(d)}toLocalFrame(t,e){const n=fe,s=n[0],i=n[1],o=n[2],r=n[3],c=n[4],a=n[5],d=n[6],u=n[7];this.getCorners(s,i,o,r,c,a,d,u);for(let h=0;h!==8;h++){const p=n[h];t.pointToLocal(p,p)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=fe,s=n[0],i=n[1],o=n[2],r=n[3],c=n[4],a=n[5],d=n[6],u=n[7];this.getCorners(s,i,o,r,c,a,d,u);for(let h=0;h!==8;h++){const p=n[h];t.pointToWorld(p,p)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,s=1/e.x,i=1/e.y,o=1/e.z,r=(this.lowerBound.x-n.x)*s,c=(this.upperBound.x-n.x)*s,a=(this.lowerBound.y-n.y)*i,d=(this.upperBound.y-n.y)*i,u=(this.lowerBound.z-n.z)*o,h=(this.upperBound.z-n.z)*o,p=Math.max(Math.max(Math.min(r,c),Math.min(a,d)),Math.min(u,h)),v=Math.min(Math.min(Math.max(r,c),Math.max(a,d)),Math.max(u,h));return!(v<0||p>v)}}const pe=new l,fe=[new l,new l,new l,new l,new l,new l,new l,new l];class ve{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:s}=e;if(s>n){const i=s;s=n,n=i}return this.matrix[(n*(n+1)>>1)+s-1]}set(t,e,n){let{index:s}=t,{index:i}=e;if(i>s){const o=i;i=s,s=o}this.matrix[(s*(s+1)>>1)+i-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class qe{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const s=n[t].indexOf(e);return s!==-1&&n[t].splice(s,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let s=0,i=n.length;s<i;s++)n[s].call(this,t)}return this}}class U{constructor(t,e,n,s){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),s===void 0&&(s=1),this.x=t,this.y=e,this.z=n,this.w=s}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new l),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=vn,s=yn;t.tangents(n,s),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new U);const n=this.x,s=this.y,i=this.z,o=this.w,r=t.x,c=t.y,a=t.z,d=t.w;return e.x=n*d+o*r+s*a-i*c,e.y=s*d+o*c+i*r-n*a,e.z=i*d+o*a+n*c-s*r,e.w=o*d-n*r-s*c-i*a,e}inverse(t){t===void 0&&(t=new U);const e=this.x,n=this.y,s=this.z,i=this.w;this.conjugate(t);const o=1/(e*e+n*n+s*s+i*i);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new U),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new l);const n=t.x,s=t.y,i=t.z,o=this.x,r=this.y,c=this.z,a=this.w,d=a*n+r*i-c*s,u=a*s+c*n-o*i,h=a*i+o*s-r*n,p=-o*n-r*s-c*i;return e.x=d*a+p*-o+u*-c-h*-r,e.y=u*a+p*-r+h*-o-d*-c,e.z=h*a+p*-c+d*-r-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,s,i;const o=this.x,r=this.y,c=this.z,a=this.w;switch(e){case"YZX":const d=o*r+c*a;if(d>.499&&(n=2*Math.atan2(o,a),s=Math.PI/2,i=0),d<-.499&&(n=-2*Math.atan2(o,a),s=-Math.PI/2,i=0),n===void 0){const u=o*o,h=r*r,p=c*c;n=Math.atan2(2*r*a-2*o*c,1-2*h-2*p),s=Math.asin(2*d),i=Math.atan2(2*o*a-2*r*c,1-2*u-2*p)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=s,t.x=i}setFromEuler(t,e,n,s){s===void 0&&(s="XYZ");const i=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(n/2),c=Math.sin(t/2),a=Math.sin(e/2),d=Math.sin(n/2);return s==="XYZ"?(this.x=c*o*r+i*a*d,this.y=i*a*r-c*o*d,this.z=i*o*d+c*a*r,this.w=i*o*r-c*a*d):s==="YXZ"?(this.x=c*o*r+i*a*d,this.y=i*a*r-c*o*d,this.z=i*o*d-c*a*r,this.w=i*o*r+c*a*d):s==="ZXY"?(this.x=c*o*r-i*a*d,this.y=i*a*r+c*o*d,this.z=i*o*d+c*a*r,this.w=i*o*r-c*a*d):s==="ZYX"?(this.x=c*o*r-i*a*d,this.y=i*a*r+c*o*d,this.z=i*o*d-c*a*r,this.w=i*o*r+c*a*d):s==="YZX"?(this.x=c*o*r+i*a*d,this.y=i*a*r+c*o*d,this.z=i*o*d-c*a*r,this.w=i*o*r-c*a*d):s==="XZY"&&(this.x=c*o*r-i*a*d,this.y=i*a*r-c*o*d,this.z=i*o*d+c*a*r,this.w=i*o*r+c*a*d),this}clone(){return new U(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new U);const s=this.x,i=this.y,o=this.z,r=this.w;let c=t.x,a=t.y,d=t.z,u=t.w,h,p,v,m,y;return p=s*c+i*a+o*d+r*u,p<0&&(p=-p,c=-c,a=-a,d=-d,u=-u),1-p>1e-6?(h=Math.acos(p),v=Math.sin(h),m=Math.sin((1-e)*h)/v,y=Math.sin(e*h)/v):(m=1-e,y=e),n.x=m*s+y*c,n.y=m*i+y*a,n.z=m*o+y*d,n.w=m*r+y*u,n}integrate(t,e,n,s){s===void 0&&(s=new U);const i=t.x*n.x,o=t.y*n.y,r=t.z*n.z,c=this.x,a=this.y,d=this.z,u=this.w,h=e*.5;return s.x+=h*(i*u+o*d-r*a),s.y+=h*(o*u+r*c-i*d),s.z+=h*(r*u+i*a-o*c),s.w+=h*(-i*c-o*a-r*d),s}}const vn=new l,yn=new l,mn={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class _{constructor(t){t===void 0&&(t={}),this.id=_.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,s){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}_.idCounter=0;_.types=mn;class k{constructor(t){t===void 0&&(t={}),this.position=new l,this.quaternion=new U,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return k.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return k.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new l),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,s){return s===void 0&&(s=new l),n.vsub(t,s),e.conjugate(ye),ye.vmult(s,s),s}static pointToWorldFrame(t,e,n,s){return s===void 0&&(s=new l),e.vmult(n,s),s.vadd(t,s),s}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new l),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,s){return s===void 0&&(s=new l),e.w*=-1,e.vmult(n,s),e.w*=-1,s}}const ye=new U;class Pt extends _{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:s=[],axes:i,boundingSphereRadius:o}=t;super({type:_.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=s,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const s=new l;for(let i=0;i!==t.length;i++){const o=t[i],r=o.length;for(let c=0;c!==r;c++){const a=(c+1)%r;e[o[c]].vsub(e[o[a]],s),s.normalize();let d=!1;for(let u=0;u!==n.length;u++)if(n[u].almostEquals(s)||n[u].almostEquals(s)){d=!0;break}d||n.push(s.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let s=0;s<this.faces[t].length;s++)if(!this.vertices[this.faces[t][s]])throw new Error(`Vertex ${this.faces[t][s]} not found!`);const e=this.faceNormals[t]||new l;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let s=0;s<this.faces[t].length;s++)console.warn(`.vertices[${this.faces[t][s]}] = Vec3(${this.vertices[this.faces[t][s]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],s=this.vertices[n[0]],i=this.vertices[n[1]],o=this.vertices[n[2]];Pt.computeNormal(s,i,o,e)}static computeNormal(t,e,n,s){const i=new l,o=new l;e.vsub(t,o),n.vsub(e,i),i.cross(o,s),s.isZero()||s.normalize()}clipAgainstHull(t,e,n,s,i,o,r,c,a){const d=new l;let u=-1,h=-Number.MAX_VALUE;for(let v=0;v<n.faces.length;v++){d.copy(n.faceNormals[v]),i.vmult(d,d);const m=d.dot(o);m>h&&(h=m,u=v)}const p=[];for(let v=0;v<n.faces[u].length;v++){const m=n.vertices[n.faces[u][v]],y=new l;y.copy(m),i.vmult(y,y),s.vadd(y,y),p.push(y)}u>=0&&this.clipFaceAgainstHull(o,t,e,p,r,c,a)}findSeparatingAxis(t,e,n,s,i,o,r,c){const a=new l,d=new l,u=new l,h=new l,p=new l,v=new l;let m=Number.MAX_VALUE;const y=this;if(y.uniqueAxes)for(let x=0;x!==y.uniqueAxes.length;x++){n.vmult(y.uniqueAxes[x],a);const f=y.testSepAxis(a,t,e,n,s,i);if(f===!1)return!1;f<m&&(m=f,o.copy(a))}else{const x=r?r.length:y.faces.length;for(let f=0;f<x;f++){const g=r?r[f]:f;a.copy(y.faceNormals[g]),n.vmult(a,a);const b=y.testSepAxis(a,t,e,n,s,i);if(b===!1)return!1;b<m&&(m=b,o.copy(a))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){i.vmult(t.uniqueAxes[x],d);const f=y.testSepAxis(d,t,e,n,s,i);if(f===!1)return!1;f<m&&(m=f,o.copy(d))}else{const x=c?c.length:t.faces.length;for(let f=0;f<x;f++){const g=c?c[f]:f;d.copy(t.faceNormals[g]),i.vmult(d,d);const b=y.testSepAxis(d,t,e,n,s,i);if(b===!1)return!1;b<m&&(m=b,o.copy(d))}}for(let x=0;x!==y.uniqueEdges.length;x++){n.vmult(y.uniqueEdges[x],h);for(let f=0;f!==t.uniqueEdges.length;f++)if(i.vmult(t.uniqueEdges[f],p),h.cross(p,v),!v.almostZero()){v.normalize();const g=y.testSepAxis(v,t,e,n,s,i);if(g===!1)return!1;g<m&&(m=g,o.copy(v))}}return s.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,s,i,o){const r=this;Pt.project(r,t,n,s,Jt),Pt.project(e,t,i,o,Qt);const c=Jt[0],a=Jt[1],d=Qt[0],u=Qt[1];if(c<u||d<a)return!1;const h=c-u,p=d-a;return h<p?h:p}calculateLocalInertia(t,e){const n=new l,s=new l;this.computeLocalAABB(s,n);const i=n.x-s.x,o=n.y-s.y,r=n.z-s.z;e.x=1/12*t*(2*o*2*o+2*r*2*r),e.y=1/12*t*(2*i*2*i+2*r*2*r),e.z=1/12*t*(2*o*2*o+2*i*2*i)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],s=this.vertices[e[0]];return-n.dot(s)}clipFaceAgainstHull(t,e,n,s,i,o,r){const c=new l,a=new l,d=new l,u=new l,h=new l,p=new l,v=new l,m=new l,y=this,x=[],f=s,g=x;let b=-1,z=Number.MAX_VALUE;for(let N=0;N<y.faces.length;N++){c.copy(y.faceNormals[N]),n.vmult(c,c);const I=c.dot(t);I<z&&(z=I,b=N)}if(b<0)return;const C=y.faces[b];C.connectedFaces=[];for(let N=0;N<y.faces.length;N++)for(let I=0;I<y.faces[N].length;I++)C.indexOf(y.faces[N][I])!==-1&&N!==b&&C.connectedFaces.indexOf(N)===-1&&C.connectedFaces.push(N);const F=C.length;for(let N=0;N<F;N++){const I=y.vertices[C[N]],R=y.vertices[C[(N+1)%F]];I.vsub(R,a),d.copy(a),n.vmult(d,d),e.vadd(d,d),u.copy(this.faceNormals[b]),n.vmult(u,u),e.vadd(u,u),d.cross(u,h),h.negate(h),p.copy(I),n.vmult(p,p),e.vadd(p,p);const E=C.connectedFaces[N];v.copy(this.faceNormals[E]);const B=this.getPlaneConstantOfFace(E);m.copy(v),n.vmult(m,m);const S=B-m.dot(e);for(this.clipFaceAgainstPlane(f,g,m,S);f.length;)f.shift();for(;g.length;)f.push(g.shift())}v.copy(this.faceNormals[b]);const P=this.getPlaneConstantOfFace(b);m.copy(v),n.vmult(m,m);const O=P-m.dot(e);for(let N=0;N<f.length;N++){let I=m.dot(f[N])+O;if(I<=i&&(console.log(`clamped: depth=${I} to minDist=${i}`),I=i),I<=o){const R=f[N];if(I<=1e-6){const E={point:R,normal:m,depth:I};r.push(E)}}}}clipFaceAgainstPlane(t,e,n,s){let i,o;const r=t.length;if(r<2)return e;let c=t[t.length-1],a=t[0];i=n.dot(c)+s;for(let d=0;d<r;d++){if(a=t[d],o=n.dot(a)+s,i<0)if(o<0){const u=new l;u.copy(a),e.push(u)}else{const u=new l;c.lerp(a,i/(i-o),u),e.push(u)}else if(o<0){const u=new l;c.lerp(a,i/(i-o),u),e.push(u),e.push(a)}c=a,i=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new l);const n=this.vertices,s=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)e.vmult(n[i],s[i]),t.vadd(s[i],s[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let s=0;s<this.vertices.length;s++){const i=n[s];i.x<t.x?t.x=i.x:i.x>e.x&&(e.x=i.x),i.y<t.y?t.y=i.y:i.y>e.y&&(e.y=i.y),i.z<t.z?t.z=i.z:i.z>e.z&&(e.z=i.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new l);const n=this.faceNormals,s=this.worldFaceNormals;for(let i=0;i!==e;i++)t.vmult(n[i],s[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const s=e[n].lengthSquared();s>t&&(t=s)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,s){const i=this.vertices;let o,r,c,a,d,u,h=new l;for(let p=0;p<i.length;p++){h.copy(i[p]),e.vmult(h,h),t.vadd(h,h);const v=h;(o===void 0||v.x<o)&&(o=v.x),(a===void 0||v.x>a)&&(a=v.x),(r===void 0||v.y<r)&&(r=v.y),(d===void 0||v.y>d)&&(d=v.y),(c===void 0||v.z<c)&&(c=v.z),(u===void 0||v.z>u)&&(u=v.z)}n.set(o,r,c),s.set(a,d,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new l);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,s=this.vertices;if(e){for(let i=0;i<n;i++){const o=s[i];e.vmult(o,o)}for(let i=0;i<this.faceNormals.length;i++){const o=this.faceNormals[i];e.vmult(o,o)}}if(t)for(let i=0;i<n;i++){const o=s[i];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,s=this.faceNormals,i=new l;this.getAveragePointLocal(i);for(let o=0;o<this.faces.length;o++){let r=s[o];const c=e[n[o][0]],a=new l;t.vsub(c,a);const d=r.dot(a),u=new l;i.vsub(c,u);const h=r.dot(u);if(d<0&&h>0||d>0&&h<0)return!1}return-1}static project(t,e,n,s,i){const o=t.vertices.length,r=wn;let c=0,a=0;const d=xn,u=t.vertices;d.setZero(),k.vectorToLocalFrame(n,s,e,r),k.pointToLocalFrame(n,s,d,d);const h=d.dot(r);a=c=u[0].dot(r);for(let p=1;p<o;p++){const v=u[p].dot(r);v>c&&(c=v),v<a&&(a=v)}if(a-=h,c-=h,a>c){const p=a;a=c,c=p}i[0]=c,i[1]=a}}const Jt=[],Qt=[];new l;const wn=new l,xn=new l;class Lt extends _{constructor(t){super({type:_.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,s=l,i=[new s(-t,-e,-n),new s(t,-e,-n),new s(t,e,-n),new s(-t,e,-n),new s(-t,-e,n),new s(t,-e,n),new s(t,e,n),new s(-t,e,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],r=[new s(0,0,1),new s(0,1,0),new s(1,0,0)],c=new Pt({vertices:i,faces:o,axes:r});this.convexPolyhedronRepresentation=c,c.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new l),Lt.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const s=t;n.x=1/12*e*(2*s.y*2*s.y+2*s.z*2*s.z),n.y=1/12*e*(2*s.x*2*s.x+2*s.z*2*s.z),n.z=1/12*e*(2*s.y*2*s.y+2*s.x*2*s.x)}getSideNormals(t,e){const n=t,s=this.halfExtents;if(n[0].set(s.x,0,0),n[1].set(0,s.y,0),n[2].set(0,0,s.z),n[3].set(-s.x,0,0),n[4].set(0,-s.y,0),n[5].set(0,0,-s.z),e!==void 0)for(let i=0;i!==n.length;i++)e.vmult(n[i],n[i]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const s=this.halfExtents,i=[[s.x,s.y,s.z],[-s.x,s.y,s.z],[-s.x,-s.y,s.z],[-s.x,-s.y,-s.z],[s.x,-s.y,-s.z],[s.x,s.y,-s.z],[-s.x,s.y,-s.z],[s.x,-s.y,s.z]];for(let o=0;o<i.length;o++)vt.set(i[o][0],i[o][1],i[o][2]),e.vmult(vt,vt),t.vadd(vt,vt),n(vt.x,vt.y,vt.z)}calculateWorldAABB(t,e,n,s){const i=this.halfExtents;ot[0].set(i.x,i.y,i.z),ot[1].set(-i.x,i.y,i.z),ot[2].set(-i.x,-i.y,i.z),ot[3].set(-i.x,-i.y,-i.z),ot[4].set(i.x,-i.y,-i.z),ot[5].set(i.x,i.y,-i.z),ot[6].set(-i.x,i.y,-i.z),ot[7].set(i.x,-i.y,i.z);const o=ot[0];e.vmult(o,o),t.vadd(o,o),s.copy(o),n.copy(o);for(let r=1;r<8;r++){const c=ot[r];e.vmult(c,c),t.vadd(c,c);const a=c.x,d=c.y,u=c.z;a>s.x&&(s.x=a),d>s.y&&(s.y=d),u>s.z&&(s.z=u),a<n.x&&(n.x=a),d<n.y&&(n.y=d),u<n.z&&(n.z=u)}}}const vt=new l,ot=[new l,new l,new l,new l,new l,new l,new l,new l],ce={DYNAMIC:1,STATIC:2,KINEMATIC:4},le={AWAKE:0,SLEEPY:1,SLEEPING:2};class T extends qe{constructor(t){t===void 0&&(t={}),super(),this.id=T.idCounter++,this.index=-1,this.world=null,this.vlambda=new l,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new l,this.previousPosition=new l,this.interpolatedPosition=new l,this.initPosition=new l,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new l,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new l,this.force=new l;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?T.STATIC:T.DYNAMIC,typeof t.type==typeof T.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=T.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new l,this.quaternion=new U,this.initQuaternion=new U,this.previousQuaternion=new U,this.interpolatedQuaternion=new U,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new l,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new l,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new l,this.invInertia=new l,this.invInertiaWorld=new nt,this.invMassSolve=0,this.invInertiaSolve=new l,this.invInertiaWorldSolve=new nt,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new l(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new l(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new tt,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new l,this.isTrigger=!!t.isTrigger,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=T.AWAKE,this.wakeUpAfterNarrowphase=!1,t===T.SLEEPING&&this.dispatchEvent(T.wakeupEvent)}sleep(){this.sleepState=T.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),s=this.sleepSpeedLimit**2;e===T.AWAKE&&n<s?(this.sleepState=T.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(T.sleepyEvent)):e===T.SLEEPY&&n>s?this.wakeUp():e===T.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(T.sleepEvent))}}updateSolveMassProperties(){this.sleepState===T.SLEEPING||this.type===T.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new l),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new l),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new l),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new l),this.quaternion.vmult(t,e),e}addShape(t,e,n){const s=new l,i=new U;return e&&s.copy(e),n&&i.copy(n),this.shapes.push(t),this.shapeOffsets.push(s),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let s=0;for(let i=0;i!==n;i++){const o=t[i];o.updateBoundingSphereRadius();const r=e[i].length(),c=o.boundingSphereRadius;r+c>s&&(s=r+c)}this.boundingRadius=s}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,s=t.length,i=gn,o=bn,r=this.quaternion,c=this.aabb,a=En;for(let d=0;d!==s;d++){const u=t[d];r.vmult(e[d],i),i.vadd(this.position,i),r.mult(n[d],o),u.calculateWorldAABB(i,o,a.lowerBound,a.upperBound),d===0?c.copy(a):c.extend(a)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=zn,s=An;n.setRotationFromQuaternion(this.quaternion),n.transpose(s),n.scale(e,n),n.mmult(s,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new l),this.type!==T.DYNAMIC)return;this.sleepState===T.SLEEPING&&this.wakeUp();const n=Cn;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new l),this.type!==T.DYNAMIC)return;const n=Mn,s=Sn;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,s),this.applyForce(n,s)}applyTorque(t){this.type===T.DYNAMIC&&(this.sleepState===T.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new l),this.type!==T.DYNAMIC)return;this.sleepState===T.SLEEPING&&this.wakeUp();const n=e,s=Bn;s.copy(t),s.scale(this.invMass,s),this.velocity.vadd(s,this.velocity);const i=Fn;n.cross(t,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new l),this.type!==T.DYNAMIC)return;const n=Tn,s=_n;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,s),this.applyImpulse(n,s)}updateMassProperties(){const t=In;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Lt.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new l;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===T.DYNAMIC||this.type===T.KINEMATIC)||this.sleepState===T.SLEEPING)return;const s=this.velocity,i=this.angularVelocity,o=this.position,r=this.force,c=this.torque,a=this.quaternion,d=this.invMass,u=this.invInertiaWorld,h=this.linearFactor,p=d*t;s.x+=r.x*p*h.x,s.y+=r.y*p*h.y,s.z+=r.z*p*h.z;const v=u.elements,m=this.angularFactor,y=c.x*m.x,x=c.y*m.y,f=c.z*m.z;i.x+=t*(v[0]*y+v[1]*x+v[2]*f),i.y+=t*(v[3]*y+v[4]*x+v[5]*f),i.z+=t*(v[6]*y+v[7]*x+v[8]*f),o.x+=s.x*t,o.y+=s.y*t,o.z+=s.z*t,a.integrate(this.angularVelocity,t,this.angularFactor,a),e&&(n?a.normalizeFast():a.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}T.idCounter=0;T.COLLIDE_EVENT_NAME="collide";T.DYNAMIC=ce.DYNAMIC;T.STATIC=ce.STATIC;T.KINEMATIC=ce.KINEMATIC;T.AWAKE=le.AWAKE;T.SLEEPY=le.SLEEPY;T.SLEEPING=le.SLEEPING;T.wakeupEvent={type:"wakeup"};T.sleepyEvent={type:"sleepy"};T.sleepEvent={type:"sleep"};const gn=new l,bn=new U,En=new tt,zn=new nt,An=new nt;new nt;const Cn=new l,Mn=new l,Sn=new l,Bn=new l,Fn=new l,Tn=new l,_n=new l,In=new l;class Oe{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!(!(t.collisionFilterGroup&e.collisionFilterMask)||!(e.collisionFilterGroup&t.collisionFilterMask)||(t.type&T.STATIC||t.sleepState===T.SLEEPING)&&(e.type&T.STATIC||e.sleepState===T.SLEEPING))}intersectionTest(t,e,n,s){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,s):this.doBoundingSphereBroadphase(t,e,n,s)}doBoundingSphereBroadphase(t,e,n,s){const i=Nn;e.position.vsub(t.position,i);const o=(t.boundingRadius+e.boundingRadius)**2;i.lengthSquared()<o&&(n.push(t),s.push(e))}doBoundingBoxBroadphase(t,e,n,s){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),s.push(e))}makePairsUnique(t,e){const n=Pn,s=Rn,i=Ln,o=t.length;for(let r=0;r!==o;r++)s[r]=t[r],i[r]=e[r];t.length=0,e.length=0;for(let r=0;r!==o;r++){const c=s[r].id,a=i[r].id,d=c<a?`${c},${a}`:`${a},${c}`;n[d]=r,n.keys.push(d)}for(let r=0;r!==n.keys.length;r++){const c=n.keys.pop(),a=n[c];t.push(s[a]),e.push(i[a]),delete n[c]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new l;t.position.vsub(e.position,n);const s=t.shapes[0],i=e.shapes[0];return Math.pow(s.boundingSphereRadius+i.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Nn=new l;new l;new U;new l;const Pn={keys:[]},Rn=[],Ln=[];new l;new l;new l;class qn extends Oe{constructor(){super()}collisionPairs(t,e,n){const s=t.bodies,i=s.length;let o,r;for(let c=0;c!==i;c++)for(let a=0;a!==c;a++)o=s[c],r=s[a],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let s=0;s<t.bodies.length;s++){const i=t.bodies[s];i.aabbNeedsUpdate&&i.updateAABB(),i.aabb.overlaps(e)&&n.push(i)}return n}}class Xt{constructor(){this.rayFromWorld=new l,this.rayToWorld=new l,this.hitNormalWorld=new l,this.hitPointWorld=new l,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,s,i,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(s),this.shape=i,this.body=o,this.distance=r}}let Ve,We,ke,je,He,De,Ge;const ae={CLOSEST:1,ANY:2,ALL:4};Ve=_.types.SPHERE;We=_.types.PLANE;ke=_.types.BOX;je=_.types.CYLINDER;He=_.types.CONVEXPOLYHEDRON;De=_.types.HEIGHTFIELD;Ge=_.types.TRIMESH;class Y{get[Ve](){return this._intersectSphere}get[We](){return this._intersectPlane}get[ke](){return this._intersectBox}get[je](){return this._intersectConvex}get[He](){return this._intersectConvex}get[De](){return this._intersectHeightfield}get[Ge](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new l),e===void 0&&(e=new l),this.from=t.clone(),this.to=e.clone(),this.direction=new l,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Y.ANY,this.result=new Xt,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||Y.ANY,this.result=e.result||new Xt,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(me),te.length=0,t.broadphase.aabbQuery(t,me,te),this.intersectBodies(te),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||!(this.collisionFilterGroup&t.collisionFilterMask)||!(t.collisionFilterGroup&this.collisionFilterMask))return;const s=On,i=Vn;for(let o=0,r=t.shapes.length;o<r;o++){const c=t.shapes[o];if(!(n&&!c.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],i),t.quaternion.vmult(t.shapeOffsets[o],s),s.vadd(t.position,s),this.intersectShape(c,i,s,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,s=t.length;!this.result.shouldStop&&n<s;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,s){const i=this.from;if(Qn(i,this.direction,n)>t.boundingSphereRadius)return;const r=this[t.type];r&&r.call(this,t,e,n,s,t)}_intersectBox(t,e,n,s,i){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,s,i)}_intersectPlane(t,e,n,s,i){const o=this.from,r=this.to,c=this.direction,a=new l(0,0,1);e.vmult(a,a);const d=new l;o.vsub(n,d);const u=d.dot(a);r.vsub(n,d);const h=d.dot(a);if(u*h>0||o.distanceTo(r)<u)return;const p=a.dot(c);if(Math.abs(p)<this.precision)return;const v=new l,m=new l,y=new l;o.vsub(n,v);const x=-a.dot(v)/p;c.scale(x,m),o.vadd(m,y),this.reportIntersection(a,y,i,s,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,s=this.to,i=this.from;e.x=Math.min(s.x,i.x),e.y=Math.min(s.y,i.y),e.z=Math.min(s.z,i.z),n.x=Math.max(s.x,i.x),n.y=Math.max(s.y,i.y),n.z=Math.max(s.z,i.z)}_intersectHeightfield(t,e,n,s,i){t.data,t.elementSize;const o=Wn;o.from.copy(this.from),o.to.copy(this.to),k.pointToLocalFrame(n,e,o.from,o.from),k.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const r=kn;let c,a,d,u;c=a=0,d=u=t.data.length-1;const h=new tt;o.getAABB(h),t.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,r,!0),c=Math.max(c,r[0]),a=Math.max(a,r[1]),t.getIndexOfPosition(h.upperBound.x,h.upperBound.y,r,!0),d=Math.min(d,r[0]+1),u=Math.min(u,r[1]+1);for(let p=c;p<d;p++)for(let v=a;v<u;v++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(p,v,h),!!h.overlapsRay(o)){if(t.getConvexTrianglePillar(p,v,!1),k.pointToWorldFrame(n,e,t.pillarOffset,Wt),this._intersectConvex(t.pillarConvex,e,Wt,s,i,we),this.result.shouldStop)return;t.getConvexTrianglePillar(p,v,!0),k.pointToWorldFrame(n,e,t.pillarOffset,Wt),this._intersectConvex(t.pillarConvex,e,Wt,s,i,we)}}}_intersectSphere(t,e,n,s,i){const o=this.from,r=this.to,c=t.radius,a=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,d=2*((r.x-o.x)*(o.x-n.x)+(r.y-o.y)*(o.y-n.y)+(r.z-o.z)*(o.z-n.z)),u=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-c**2,h=d**2-4*a*u,p=jn,v=Hn;if(!(h<0))if(h===0)o.lerp(r,h,p),p.vsub(n,v),v.normalize(),this.reportIntersection(v,p,i,s,-1);else{const m=(-d-Math.sqrt(h))/(2*a),y=(-d+Math.sqrt(h))/(2*a);if(m>=0&&m<=1&&(o.lerp(r,m,p),p.vsub(n,v),v.normalize(),this.reportIntersection(v,p,i,s,-1)),this.result.shouldStop)return;y>=0&&y<=1&&(o.lerp(r,y,p),p.vsub(n,v),v.normalize(),this.reportIntersection(v,p,i,s,-1))}}_intersectConvex(t,e,n,s,i,o){const r=Dn,c=xe,a=o&&o.faceList||null,d=t.faces,u=t.vertices,h=t.faceNormals,p=this.direction,v=this.from,m=this.to,y=v.distanceTo(m),x=a?a.length:d.length,f=this.result;for(let g=0;!f.shouldStop&&g<x;g++){const b=a?a[g]:g,z=d[b],C=h[b],F=e,P=n;c.copy(u[z[0]]),F.vmult(c,c),c.vadd(P,c),c.vsub(v,c),F.vmult(C,r);const O=p.dot(r);if(Math.abs(O)<this.precision)continue;const N=r.dot(c)/O;if(!(N<0)){p.scale(N,J),J.vadd(v,J),et.copy(u[z[0]]),F.vmult(et,et),P.vadd(et,et);for(let I=1;!f.shouldStop&&I<z.length-1;I++){rt.copy(u[z[I]]),ct.copy(u[z[I+1]]),F.vmult(rt,rt),F.vmult(ct,ct),P.vadd(rt,rt),P.vadd(ct,ct);const R=J.distanceTo(v);!(Y.pointInTriangle(J,et,rt,ct)||Y.pointInTriangle(J,rt,et,ct))||R>y||this.reportIntersection(r,J,i,s,b)}}}}_intersectTrimesh(t,e,n,s,i,o){const r=Gn,c=Kn,a=Jn,d=xe,u=Yn,h=Un,p=Xn,v=Zn,m=$n,y=t.indices;t.vertices;const x=this.from,f=this.to,g=this.direction;a.position.copy(n),a.quaternion.copy(e),k.vectorToLocalFrame(n,e,g,u),k.pointToLocalFrame(n,e,x,h),k.pointToLocalFrame(n,e,f,p),p.x*=t.scale.x,p.y*=t.scale.y,p.z*=t.scale.z,h.x*=t.scale.x,h.y*=t.scale.y,h.z*=t.scale.z,p.vsub(h,u),u.normalize();const b=h.distanceSquared(p);t.tree.rayQuery(this,a,c);for(let z=0,C=c.length;!this.result.shouldStop&&z!==C;z++){const F=c[z];t.getNormal(F,r),t.getVertex(y[F*3],et),et.vsub(h,d);const P=u.dot(r),O=r.dot(d)/P;if(O<0)continue;u.scale(O,J),J.vadd(h,J),t.getVertex(y[F*3+1],rt),t.getVertex(y[F*3+2],ct);const N=J.distanceSquared(h);!(Y.pointInTriangle(J,rt,et,ct)||Y.pointInTriangle(J,et,rt,ct))||N>b||(k.vectorToWorldFrame(e,r,m),k.pointToWorldFrame(n,e,J,v),this.reportIntersection(m,v,i,s,F))}c.length=0}reportIntersection(t,e,n,s,i){const o=this.from,r=this.to,c=o.distanceTo(e),a=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(a.hitFaceIndex=typeof i<"u"?i:-1,this.mode){case Y.ALL:this.hasHit=!0,a.set(o,r,t,e,n,s,c),a.hasHit=!0,this.callback(a);break;case Y.CLOSEST:(c<a.distance||!a.hasHit)&&(this.hasHit=!0,a.hasHit=!0,a.set(o,r,t,e,n,s,c));break;case Y.ANY:this.hasHit=!0,a.hasHit=!0,a.set(o,r,t,e,n,s,c),a.shouldStop=!0;break}}static pointInTriangle(t,e,n,s){s.vsub(e,xt),n.vsub(e,Tt),t.vsub(e,ee);const i=xt.dot(xt),o=xt.dot(Tt),r=xt.dot(ee),c=Tt.dot(Tt),a=Tt.dot(ee);let d,u;return(d=c*r-o*a)>=0&&(u=i*a-o*r)>=0&&d+u<i*c-o*o}}Y.CLOSEST=ae.CLOSEST;Y.ANY=ae.ANY;Y.ALL=ae.ALL;const me=new tt,te=[],Tt=new l,ee=new l,On=new l,Vn=new U,J=new l,et=new l,rt=new l,ct=new l;new l;new Xt;const we={faceList:[0]},Wt=new l,Wn=new Y,kn=[],jn=new l,Hn=new l,Dn=new l;new l;new l;const xe=new l,Gn=new l,Yn=new l,Un=new l,Xn=new l,$n=new l,Zn=new l;new tt;const Kn=[],Jn=new k,xt=new l,kt=new l;function Qn(w,t,e){e.vsub(w,xt);const n=xt.dot(t);return t.scale(n,kt),kt.vadd(w,kt),e.distanceTo(kt)}class Ct extends Oe{static checkBounds(t,e,n){let s,i;n===0?(s=t.position.x,i=e.position.x):n===1?(s=t.position.y,i=e.position.y):n===2&&(s=t.position.z,i=e.position.z);const o=t.boundingRadius,r=e.boundingRadius,c=s+o;return i-r<c}static insertionSortX(t){for(let e=1,n=t.length;e<n;e++){const s=t[e];let i;for(i=e-1;i>=0&&!(t[i].aabb.lowerBound.x<=s.aabb.lowerBound.x);i--)t[i+1]=t[i];t[i+1]=s}return t}static insertionSortY(t){for(let e=1,n=t.length;e<n;e++){const s=t[e];let i;for(i=e-1;i>=0&&!(t[i].aabb.lowerBound.y<=s.aabb.lowerBound.y);i--)t[i+1]=t[i];t[i+1]=s}return t}static insertionSortZ(t){for(let e=1,n=t.length;e<n;e++){const s=t[e];let i;for(i=e-1;i>=0&&!(t[i].aabb.lowerBound.z<=s.aabb.lowerBound.z);i--)t[i+1]=t[i];t[i+1]=s}return t}constructor(t){super(),this.axisList=[],this.world=null,this.axisIndex=0;const e=this.axisList;this._addBodyHandler=n=>{e.push(n.body)},this._removeBodyHandler=n=>{const s=e.indexOf(n.body);s!==-1&&e.splice(s,1)},t&&this.setWorld(t)}setWorld(t){this.axisList.length=0;for(let e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0}collisionPairs(t,e,n){const s=this.axisList,i=s.length,o=this.axisIndex;let r,c;for(this.dirty&&(this.sortList(),this.dirty=!1),r=0;r!==i;r++){const a=s[r];for(c=r+1;c<i;c++){const d=s[c];if(this.needBroadphaseCollision(a,d)){if(!Ct.checkBounds(a,d,o))break;this.intersectionTest(a,d,e,n)}}}}sortList(){const t=this.axisList,e=this.axisIndex,n=t.length;for(let s=0;s!==n;s++){const i=t[s];i.aabbNeedsUpdate&&i.updateAABB()}e===0?Ct.insertionSortX(t):e===1?Ct.insertionSortY(t):e===2&&Ct.insertionSortZ(t)}autoDetectAxis(){let t=0,e=0,n=0,s=0,i=0,o=0;const r=this.axisList,c=r.length,a=1/c;for(let p=0;p!==c;p++){const v=r[p],m=v.position.x;t+=m,e+=m*m;const y=v.position.y;n+=y,s+=y*y;const x=v.position.z;i+=x,o+=x*x}const d=e-t*t*a,u=s-n*n*a,h=o-i*i*a;d>u?d>h?this.axisIndex=0:this.axisIndex=2:u>h?this.axisIndex=1:this.axisIndex=2}aabbQuery(t,e,n){n===void 0&&(n=[]),this.dirty&&(this.sortList(),this.dirty=!1);const s=this.axisIndex;let i="x";s===1&&(i="y"),s===2&&(i="z");const o=this.axisList;e.lowerBound[i],e.upperBound[i];for(let r=0;r<o.length;r++){const c=o[r];c.aabbNeedsUpdate&&c.updateAABB(),c.aabb.overlaps(e)&&n.push(c)}return n}}class ts{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class ge{constructor(){this.spatial=new l,this.rotational=new l}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class qt{constructor(t,e,n,s){n===void 0&&(n=-1e6),s===void 0&&(s=1e6),this.id=qt.idCounter++,this.minForce=n,this.maxForce=s,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new ge,this.jacobianElementB=new ge,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const s=e,i=t,o=n;this.a=4/(o*(1+4*s)),this.b=4*s/(1+4*s),this.eps=4/(o*o*i*(1+4*s))}computeB(t,e,n){const s=this.computeGW(),i=this.computeGq(),o=this.computeGiMf();return-i*t-s*e-o*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.position,o=s.position;return t.spatial.dot(i)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.velocity,o=s.velocity,r=n.angularVelocity,c=s.angularVelocity;return t.multiplyVectors(i,r)+e.multiplyVectors(o,c)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.vlambda,o=s.vlambda,r=n.wlambda,c=s.wlambda;return t.multiplyVectors(i,r)+e.multiplyVectors(o,c)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.force,o=n.torque,r=s.force,c=s.torque,a=n.invMassSolve,d=s.invMassSolve;return i.scale(a,be),r.scale(d,Ee),n.invInertiaWorldSolve.vmult(o,ze),s.invInertiaWorldSolve.vmult(c,Ae),t.multiplyVectors(be,ze)+e.multiplyVectors(Ee,Ae)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,s=this.bj,i=n.invMassSolve,o=s.invMassSolve,r=n.invInertiaWorldSolve,c=s.invInertiaWorldSolve;let a=i+o;return r.vmult(t.rotational,jt),a+=jt.dot(t.rotational),c.vmult(e.rotational,jt),a+=jt.dot(e.rotational),a}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,s=this.bi,i=this.bj,o=es;s.vlambda.addScaledVector(s.invMassSolve*t,e.spatial,s.vlambda),i.vlambda.addScaledVector(i.invMassSolve*t,n.spatial,i.vlambda),s.invInertiaWorldSolve.vmult(e.rotational,o),s.wlambda.addScaledVector(t,o,s.wlambda),i.invInertiaWorldSolve.vmult(n.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}qt.idCounter=0;const be=new l,Ee=new l,ze=new l,Ae=new l,jt=new l,es=new l;class ns extends qt{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new l,this.rj=new l,this.ni=new l}computeB(t){const e=this.a,n=this.b,s=this.bi,i=this.bj,o=this.ri,r=this.rj,c=ss,a=is,d=s.velocity,u=s.angularVelocity;s.force,s.torque;const h=i.velocity,p=i.angularVelocity;i.force,i.torque;const v=os,m=this.jacobianElementA,y=this.jacobianElementB,x=this.ni;o.cross(x,c),r.cross(x,a),x.negate(m.spatial),c.negate(m.rotational),y.spatial.copy(x),y.rotational.copy(a),v.copy(i.position),v.vadd(r,v),v.vsub(s.position,v),v.vsub(o,v);const f=x.dot(v),g=this.restitution+1,b=g*h.dot(x)-g*d.dot(x)+p.dot(a)-u.dot(c),z=this.computeGiMf();return-f*e-b*n-t*z}getImpactVelocityAlongNormal(){const t=rs,e=cs,n=ls,s=as,i=hs;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,s),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(s,e),t.vsub(e,i),this.ni.dot(i)}}const ss=new l,is=new l,os=new l,rs=new l,cs=new l,ls=new l,as=new l,hs=new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;class Ce extends qt{constructor(t,e,n){super(t,e,-n,n),this.ri=new l,this.rj=new l,this.t=new l}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,s=this.rj,i=ds,o=us,r=this.t;n.cross(r,i),s.cross(r,o);const c=this.jacobianElementA,a=this.jacobianElementB;r.negate(c.spatial),i.negate(c.rotational),a.spatial.copy(r),a.rotational.copy(o);const d=this.computeGW(),u=this.computeGiMf();return-d*e-t*u}}const ds=new l,us=new l;class Ot{constructor(t,e,n){n=ts.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Ot.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}Ot.idCounter=0;class St{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=St.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}St.idCounter=0;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new Y;new l;new l;new l;new l(1,0,0),new l(0,1,0),new l(0,0,1);new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new l;new tt;new l;new tt;new l;new l;new l;new l;new l;new l;new l;new tt;new l;new k;new tt;class ps{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class fs extends ps{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const s=this.iterations,i=this.tolerance*this.tolerance,o=this.equations,r=o.length,c=e.bodies,a=c.length,d=t;let u,h,p,v,m,y;if(r!==0)for(let b=0;b!==a;b++)c[b].updateSolveMassProperties();const x=ys,f=ms,g=vs;x.length=r,f.length=r,g.length=r;for(let b=0;b!==r;b++){const z=o[b];g[b]=0,f[b]=z.computeB(d),x[b]=1/z.computeC()}if(r!==0){for(let C=0;C!==a;C++){const F=c[C],P=F.vlambda,O=F.wlambda;P.set(0,0,0),O.set(0,0,0)}for(n=0;n!==s;n++){v=0;for(let C=0;C!==r;C++){const F=o[C];u=f[C],h=x[C],y=g[C],m=F.computeGWlambda(),p=h*(u-m-F.eps*y),y+p<F.minForce?p=F.minForce-y:y+p>F.maxForce&&(p=F.maxForce-y),g[C]+=p,v+=p>0?p:-p,F.addToWlambda(p)}if(v*v<i)break}for(let C=0;C!==a;C++){const F=c[C],P=F.velocity,O=F.angularVelocity;F.vlambda.vmul(F.linearFactor,F.vlambda),P.vadd(F.vlambda,P),F.wlambda.vmul(F.angularFactor,F.wlambda),O.vadd(F.wlambda,O)}let b=o.length;const z=1/d;for(;b--;)o[b].multiplier=g[b]*z}return n}}const vs=[],ys=[],ms=[];class ws{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class xs extends ws{constructor(){super(...arguments),this.type=l}constructObject(){return new l}}const j={sphereSphere:_.types.SPHERE,spherePlane:_.types.SPHERE|_.types.PLANE,boxBox:_.types.BOX|_.types.BOX,sphereBox:_.types.SPHERE|_.types.BOX,planeBox:_.types.PLANE|_.types.BOX,convexConvex:_.types.CONVEXPOLYHEDRON,sphereConvex:_.types.SPHERE|_.types.CONVEXPOLYHEDRON,planeConvex:_.types.PLANE|_.types.CONVEXPOLYHEDRON,boxConvex:_.types.BOX|_.types.CONVEXPOLYHEDRON,sphereHeightfield:_.types.SPHERE|_.types.HEIGHTFIELD,boxHeightfield:_.types.BOX|_.types.HEIGHTFIELD,convexHeightfield:_.types.CONVEXPOLYHEDRON|_.types.HEIGHTFIELD,sphereParticle:_.types.PARTICLE|_.types.SPHERE,planeParticle:_.types.PLANE|_.types.PARTICLE,boxParticle:_.types.BOX|_.types.PARTICLE,convexParticle:_.types.PARTICLE|_.types.CONVEXPOLYHEDRON,cylinderCylinder:_.types.CYLINDER,sphereCylinder:_.types.SPHERE|_.types.CYLINDER,planeCylinder:_.types.PLANE|_.types.CYLINDER,boxCylinder:_.types.BOX|_.types.CYLINDER,convexCylinder:_.types.CONVEXPOLYHEDRON|_.types.CYLINDER,heightfieldCylinder:_.types.HEIGHTFIELD|_.types.CYLINDER,particleCylinder:_.types.PARTICLE|_.types.CYLINDER,sphereTrimesh:_.types.SPHERE|_.types.TRIMESH,planeTrimesh:_.types.PLANE|_.types.TRIMESH};class gs{get[j.sphereSphere](){return this.sphereSphere}get[j.spherePlane](){return this.spherePlane}get[j.boxBox](){return this.boxBox}get[j.sphereBox](){return this.sphereBox}get[j.planeBox](){return this.planeBox}get[j.convexConvex](){return this.convexConvex}get[j.sphereConvex](){return this.sphereConvex}get[j.planeConvex](){return this.planeConvex}get[j.boxConvex](){return this.boxConvex}get[j.sphereHeightfield](){return this.sphereHeightfield}get[j.boxHeightfield](){return this.boxHeightfield}get[j.convexHeightfield](){return this.convexHeightfield}get[j.sphereParticle](){return this.sphereParticle}get[j.planeParticle](){return this.planeParticle}get[j.boxParticle](){return this.boxParticle}get[j.convexParticle](){return this.convexParticle}get[j.cylinderCylinder](){return this.convexConvex}get[j.sphereCylinder](){return this.sphereConvex}get[j.planeCylinder](){return this.planeConvex}get[j.boxCylinder](){return this.boxConvex}get[j.convexCylinder](){return this.convexConvex}get[j.heightfieldCylinder](){return this.heightfieldCylinder}get[j.particleCylinder](){return this.particleCylinder}get[j.sphereTrimesh](){return this.sphereTrimesh}get[j.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new xs,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,s,i,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new ns(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&s.collisionResponse;const c=this.currentContactMaterial;r.restitution=c.restitution,r.setSpookParams(c.contactEquationStiffness,c.contactEquationRelaxation,this.world.dt);const a=n.material||t.material,d=s.material||e.material;return a&&d&&a.restitution>=0&&d.restitution>=0&&(r.restitution=a.restitution*d.restitution),r.si=i||n,r.sj=o||s,r}createFrictionEquationsFromContact(t,e){const n=t.bi,s=t.bj,i=t.si,o=t.sj,r=this.world,c=this.currentContactMaterial;let a=c.friction;const d=i.material||n.material,u=o.material||s.material;if(d&&u&&d.friction>=0&&u.friction>=0&&(a=d.friction*u.friction),a>0){const h=a*(r.frictionGravity||r.gravity).length();let p=n.invMass+s.invMass;p>0&&(p=1/p);const v=this.frictionEquationPool,m=v.length?v.pop():new Ce(n,s,h*p),y=v.length?v.pop():new Ce(n,s,h*p);return m.bi=y.bi=n,m.bj=y.bj=s,m.minForce=y.minForce=-h*p,m.maxForce=y.maxForce=h*p,m.ri.copy(t.ri),m.rj.copy(t.rj),y.ri.copy(t.ri),y.rj.copy(t.rj),t.ni.tangents(m.t,y.t),m.setSpookParams(c.frictionEquationStiffness,c.frictionEquationRelaxation,r.dt),y.setSpookParams(c.frictionEquationStiffness,c.frictionEquationRelaxation,r.dt),m.enabled=y.enabled=t.enabled,e.push(m,y),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],s=this.frictionResult[this.frictionResult.length-1];wt.setZero(),Et.setZero(),zt.setZero();const i=e.bi;e.bj;for(let r=0;r!==t;r++)e=this.result[this.result.length-1-r],e.bi!==i?(wt.vadd(e.ni,wt),Et.vadd(e.ri,Et),zt.vadd(e.rj,zt)):(wt.vsub(e.ni,wt),Et.vadd(e.rj,Et),zt.vadd(e.ri,zt));const o=1/t;Et.scale(o,n.ri),zt.scale(o,n.rj),s.ri.copy(n.ri),s.rj.copy(n.rj),wt.normalize(),wt.tangents(n.t,s.t)}getContacts(t,e,n,s,i,o,r){this.contactPointPool=i,this.frictionEquationPool=r,this.result=s,this.frictionResult=o;const c=zs,a=As,d=bs,u=Es;for(let h=0,p=t.length;h!==p;h++){const v=t[h],m=e[h];let y=null;v.material&&m.material&&(y=n.getContactMaterial(v.material,m.material)||null);const x=v.type&T.KINEMATIC&&m.type&T.STATIC||v.type&T.STATIC&&m.type&T.KINEMATIC||v.type&T.KINEMATIC&&m.type&T.KINEMATIC;for(let f=0;f<v.shapes.length;f++){v.quaternion.mult(v.shapeOrientations[f],c),v.quaternion.vmult(v.shapeOffsets[f],d),d.vadd(v.position,d);const g=v.shapes[f];for(let b=0;b<m.shapes.length;b++){m.quaternion.mult(m.shapeOrientations[b],a),m.quaternion.vmult(m.shapeOffsets[b],u),u.vadd(m.position,u);const z=m.shapes[b];if(!(g.collisionFilterMask&z.collisionFilterGroup&&z.collisionFilterMask&g.collisionFilterGroup)||d.distanceTo(u)>g.boundingSphereRadius+z.boundingSphereRadius)continue;let C=null;g.material&&z.material&&(C=n.getContactMaterial(g.material,z.material)||null),this.currentContactMaterial=C||y||n.defaultContactMaterial;const F=g.type|z.type,P=this[F];if(P){let O=!1;g.type<z.type?O=P.call(this,g,z,d,u,c,a,v,m,g,z,x):O=P.call(this,z,g,u,d,a,c,m,v,g,z,x),O&&x&&(n.shapeOverlapKeeper.set(g.id,z.id),n.bodyOverlapKeeper.set(v.id,m.id))}}}}}sphereSphere(t,e,n,s,i,o,r,c,a,d,u){if(u)return n.distanceSquared(s)<(t.radius+e.radius)**2;const h=this.createContactEquation(r,c,t,e,a,d);s.vsub(n,h.ni),h.ni.normalize(),h.ri.copy(h.ni),h.rj.copy(h.ni),h.ri.scale(t.radius,h.ri),h.rj.scale(-e.radius,h.rj),h.ri.vadd(n,h.ri),h.ri.vsub(r.position,h.ri),h.rj.vadd(s,h.rj),h.rj.vsub(c.position,h.rj),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}spherePlane(t,e,n,s,i,o,r,c,a,d,u){const h=this.createContactEquation(r,c,t,e,a,d);if(h.ni.set(0,0,1),o.vmult(h.ni,h.ni),h.ni.negate(h.ni),h.ni.normalize(),h.ni.scale(t.radius,h.ri),n.vsub(s,Ht),h.ni.scale(h.ni.dot(Ht),Me),Ht.vsub(Me,h.rj),-Ht.dot(h.ni)<=t.radius){if(u)return!0;const p=h.ri,v=h.rj;p.vadd(n,p),p.vsub(r.position,p),v.vadd(s,v),v.vsub(c.position,v),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}}boxBox(t,e,n,s,i,o,r,c,a,d,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,s,i,o,r,c,t,e,u)}sphereBox(t,e,n,s,i,o,r,c,a,d,u){const h=this.v3pool,p=Zs;n.vsub(s,Dt),e.getSideNormals(p,o);const v=t.radius;let m=!1;const y=Js,x=Qs,f=ti;let g=null,b=0,z=0,C=0,F=null;for(let A=0,W=p.length;A!==W&&m===!1;A++){const q=Us;q.copy(p[A]);const V=q.length();q.normalize();const G=Dt.dot(q);if(G<V+v&&G>0){const D=Xs,L=$s;D.copy(p[(A+1)%3]),L.copy(p[(A+2)%3]);const K=D.length(),st=L.length();D.normalize(),L.normalize();const it=Dt.dot(D),pt=Dt.dot(L);if(it<K&&it>-K&&pt<st&&pt>-st){const ft=Math.abs(G-V-v);if((F===null||ft<F)&&(F=ft,z=it,C=pt,g=V,y.copy(q),x.copy(D),f.copy(L),b++,u))return!0}}}if(b){m=!0;const A=this.createContactEquation(r,c,t,e,a,d);y.scale(-v,A.ri),A.ni.copy(y),A.ni.negate(A.ni),y.scale(g,y),x.scale(z,x),y.vadd(x,y),f.scale(C,f),y.vadd(f,A.rj),A.ri.vadd(n,A.ri),A.ri.vsub(r.position,A.ri),A.rj.vadd(s,A.rj),A.rj.vsub(c.position,A.rj),this.result.push(A),this.createFrictionEquationsFromContact(A,this.frictionResult)}let P=h.get();const O=Ks;for(let A=0;A!==2&&!m;A++)for(let W=0;W!==2&&!m;W++)for(let q=0;q!==2&&!m;q++)if(P.set(0,0,0),A?P.vadd(p[0],P):P.vsub(p[0],P),W?P.vadd(p[1],P):P.vsub(p[1],P),q?P.vadd(p[2],P):P.vsub(p[2],P),s.vadd(P,O),O.vsub(n,O),O.lengthSquared()<v*v){if(u)return!0;m=!0;const V=this.createContactEquation(r,c,t,e,a,d);V.ri.copy(O),V.ri.normalize(),V.ni.copy(V.ri),V.ri.scale(v,V.ri),V.rj.copy(P),V.ri.vadd(n,V.ri),V.ri.vsub(r.position,V.ri),V.rj.vadd(s,V.rj),V.rj.vsub(c.position,V.rj),this.result.push(V),this.createFrictionEquationsFromContact(V,this.frictionResult)}h.release(P),P=null;const N=h.get(),I=h.get(),R=h.get(),E=h.get(),B=h.get(),S=p.length;for(let A=0;A!==S&&!m;A++)for(let W=0;W!==S&&!m;W++)if(A%3!==W%3){p[W].cross(p[A],N),N.normalize(),p[A].vadd(p[W],I),R.copy(n),R.vsub(I,R),R.vsub(s,R);const q=R.dot(N);N.scale(q,E);let V=0;for(;V===A%3||V===W%3;)V++;B.copy(n),B.vsub(E,B),B.vsub(I,B),B.vsub(s,B);const G=Math.abs(q),D=B.length();if(G<p[V].length()&&D<v){if(u)return!0;m=!0;const L=this.createContactEquation(r,c,t,e,a,d);I.vadd(E,L.rj),L.rj.copy(L.rj),B.negate(L.ni),L.ni.normalize(),L.ri.copy(L.rj),L.ri.vadd(s,L.ri),L.ri.vsub(n,L.ri),L.ri.normalize(),L.ri.scale(v,L.ri),L.ri.vadd(n,L.ri),L.ri.vsub(r.position,L.ri),L.rj.vadd(s,L.rj),L.rj.vsub(c.position,L.rj),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}h.release(N,I,R,E,B)}planeBox(t,e,n,s,i,o,r,c,a,d,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,s,i,o,r,c,t,e,u)}convexConvex(t,e,n,s,i,o,r,c,a,d,u,h,p){const v=vi;if(!(n.distanceTo(s)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,i,s,o,v,h,p)){const m=[],y=yi;t.clipAgainstHull(n,i,e,s,o,v,-100,100,m);let x=0;for(let f=0;f!==m.length;f++){if(u)return!0;const g=this.createContactEquation(r,c,t,e,a,d),b=g.ri,z=g.rj;v.negate(g.ni),m[f].normal.negate(y),y.scale(m[f].depth,y),m[f].point.vadd(y,b),z.copy(m[f].point),b.vsub(n,b),z.vsub(s,z),b.vadd(n,b),b.vsub(r.position,b),z.vadd(s,z),z.vsub(c.position,z),this.result.push(g),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(g,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,n,s,i,o,r,c,a,d,u){const h=this.v3pool;n.vsub(s,ei);const p=e.faceNormals,v=e.faces,m=e.vertices,y=t.radius;let x=!1;for(let f=0;f!==m.length;f++){const g=m[f],b=oi;o.vmult(g,b),s.vadd(b,b);const z=ii;if(b.vsub(n,z),z.lengthSquared()<y*y){if(u)return!0;x=!0;const C=this.createContactEquation(r,c,t,e,a,d);C.ri.copy(z),C.ri.normalize(),C.ni.copy(C.ri),C.ri.scale(y,C.ri),b.vsub(s,C.rj),C.ri.vadd(n,C.ri),C.ri.vsub(r.position,C.ri),C.rj.vadd(s,C.rj),C.rj.vsub(c.position,C.rj),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult);return}}for(let f=0,g=v.length;f!==g&&x===!1;f++){const b=p[f],z=v[f],C=ri;o.vmult(b,C);const F=ci;o.vmult(m[z[0]],F),F.vadd(s,F);const P=li;C.scale(-y,P),n.vadd(P,P);const O=ai;P.vsub(F,O);const N=O.dot(C),I=hi;if(n.vsub(F,I),N<0&&I.dot(C)>0){const R=[];for(let E=0,B=z.length;E!==B;E++){const S=h.get();o.vmult(m[z[E]],S),s.vadd(S,S),R.push(S)}if(Ys(R,C,n)){if(u)return!0;x=!0;const E=this.createContactEquation(r,c,t,e,a,d);C.scale(-y,E.ri),C.negate(E.ni);const B=h.get();C.scale(-N,B);const S=h.get();C.scale(-y,S),n.vsub(s,E.rj),E.rj.vadd(S,E.rj),E.rj.vadd(B,E.rj),E.rj.vadd(s,E.rj),E.rj.vsub(c.position,E.rj),E.ri.vadd(n,E.ri),E.ri.vsub(r.position,E.ri),h.release(B),h.release(S),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult);for(let A=0,W=R.length;A!==W;A++)h.release(R[A]);return}else for(let E=0;E!==z.length;E++){const B=h.get(),S=h.get();o.vmult(m[z[(E+1)%z.length]],B),o.vmult(m[z[(E+2)%z.length]],S),s.vadd(B,B),s.vadd(S,S);const A=ni;S.vsub(B,A);const W=si;A.unit(W);const q=h.get(),V=h.get();n.vsub(B,V);const G=V.dot(W);W.scale(G,q),q.vadd(B,q);const D=h.get();if(q.vsub(n,D),G>0&&G*G<A.lengthSquared()&&D.lengthSquared()<y*y){if(u)return!0;const L=this.createContactEquation(r,c,t,e,a,d);q.vsub(s,L.rj),q.vsub(n,L.ni),L.ni.normalize(),L.ni.scale(y,L.ri),L.rj.vadd(s,L.rj),L.rj.vsub(c.position,L.rj),L.ri.vadd(n,L.ri),L.ri.vsub(r.position,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult);for(let K=0,st=R.length;K!==st;K++)h.release(R[K]);h.release(B),h.release(S),h.release(q),h.release(D),h.release(V);return}h.release(B),h.release(S),h.release(q),h.release(D),h.release(V)}for(let E=0,B=R.length;E!==B;E++)h.release(R[E])}}}planeConvex(t,e,n,s,i,o,r,c,a,d,u){const h=di,p=ui;p.set(0,0,1),i.vmult(p,p);let v=0;const m=pi;for(let y=0;y!==e.vertices.length;y++)if(h.copy(e.vertices[y]),o.vmult(h,h),s.vadd(h,h),h.vsub(n,m),p.dot(m)<=0){if(u)return!0;const f=this.createContactEquation(r,c,t,e,a,d),g=fi;p.scale(p.dot(m),g),h.vsub(g,g),g.vsub(n,f.ri),f.ni.copy(p),h.vsub(s,f.rj),f.ri.vadd(n,f.ri),f.ri.vsub(r.position,f.ri),f.rj.vadd(s,f.rj),f.rj.vsub(c.position,f.rj),this.result.push(f),v++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(f,this.frictionResult)}this.enableFrictionReduction&&v&&this.createFrictionFromAverage(v)}boxConvex(t,e,n,s,i,o,r,c,a,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,s,i,o,r,c,t,e,u)}sphereHeightfield(t,e,n,s,i,o,r,c,a,d,u){const h=e.data,p=t.radius,v=e.elementSize,m=Bi,y=Si;k.pointToLocalFrame(s,o,n,y);let x=Math.floor((y.x-p)/v)-1,f=Math.ceil((y.x+p)/v)+1,g=Math.floor((y.y-p)/v)-1,b=Math.ceil((y.y+p)/v)+1;if(f<0||b<0||x>h.length||g>h[0].length)return;x<0&&(x=0),f<0&&(f=0),g<0&&(g=0),b<0&&(b=0),x>=h.length&&(x=h.length-1),f>=h.length&&(f=h.length-1),b>=h[0].length&&(b=h[0].length-1),g>=h[0].length&&(g=h[0].length-1);const z=[];e.getRectMinMax(x,g,f,b,z);const C=z[0],F=z[1];if(y.z-p>F||y.z+p<C)return;const P=this.result;for(let O=x;O<f;O++)for(let N=g;N<b;N++){const I=P.length;let R=!1;if(e.getConvexTrianglePillar(O,N,!1),k.pointToWorldFrame(s,o,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(R=this.sphereConvex(t,e.pillarConvex,n,m,i,o,r,c,t,e,u)),u&&R||(e.getConvexTrianglePillar(O,N,!0),k.pointToWorldFrame(s,o,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(R=this.sphereConvex(t,e.pillarConvex,n,m,i,o,r,c,t,e,u)),u&&R))return!0;if(P.length-I>2)return}}boxHeightfield(t,e,n,s,i,o,r,c,a,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,s,i,o,r,c,t,e,u)}convexHeightfield(t,e,n,s,i,o,r,c,a,d,u){const h=e.data,p=e.elementSize,v=t.boundingSphereRadius,m=Ci,y=Mi,x=Ai;k.pointToLocalFrame(s,o,n,x);let f=Math.floor((x.x-v)/p)-1,g=Math.ceil((x.x+v)/p)+1,b=Math.floor((x.y-v)/p)-1,z=Math.ceil((x.y+v)/p)+1;if(g<0||z<0||f>h.length||b>h[0].length)return;f<0&&(f=0),g<0&&(g=0),b<0&&(b=0),z<0&&(z=0),f>=h.length&&(f=h.length-1),g>=h.length&&(g=h.length-1),z>=h[0].length&&(z=h[0].length-1),b>=h[0].length&&(b=h[0].length-1);const C=[];e.getRectMinMax(f,b,g,z,C);const F=C[0],P=C[1];if(!(x.z-v>P||x.z+v<F))for(let O=f;O<g;O++)for(let N=b;N<z;N++){let I=!1;if(e.getConvexTrianglePillar(O,N,!1),k.pointToWorldFrame(s,o,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(I=this.convexConvex(t,e.pillarConvex,n,m,i,o,r,c,null,null,u,y,null)),u&&I||(e.getConvexTrianglePillar(O,N,!0),k.pointToWorldFrame(s,o,e.pillarOffset,m),n.distanceTo(m)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(I=this.convexConvex(t,e.pillarConvex,n,m,i,o,r,c,null,null,u,y,null)),u&&I))return!0}}sphereParticle(t,e,n,s,i,o,r,c,a,d,u){const h=gi;if(h.set(0,0,1),s.vsub(n,h),h.lengthSquared()<=t.radius*t.radius){if(u)return!0;const v=this.createContactEquation(c,r,e,t,a,d);h.normalize(),v.rj.copy(h),v.rj.scale(t.radius,v.rj),v.ni.copy(h),v.ni.negate(v.ni),v.ri.set(0,0,0),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}planeParticle(t,e,n,s,i,o,r,c,a,d,u){const h=mi;h.set(0,0,1),r.quaternion.vmult(h,h);const p=wi;if(s.vsub(r.position,p),h.dot(p)<=0){if(u)return!0;const m=this.createContactEquation(c,r,e,t,a,d);m.ni.copy(h),m.ni.negate(m.ni),m.ri.set(0,0,0);const y=xi;h.scale(h.dot(s),y),s.vsub(y,y),m.rj.copy(y),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}boxParticle(t,e,n,s,i,o,r,c,a,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,s,i,o,r,c,t,e,u)}convexParticle(t,e,n,s,i,o,r,c,a,d,u){let h=-1;const p=Ei,v=zi;let m=null;const y=bi;if(y.copy(s),y.vsub(n,y),i.conjugate(Se),Se.vmult(y,y),t.pointIsInside(y)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,i),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(i);for(let x=0,f=t.faces.length;x!==f;x++){const g=[t.worldVertices[t.faces[x][0]]],b=t.worldFaceNormals[x];s.vsub(g[0],Be);const z=-b.dot(Be);if(m===null||Math.abs(z)<Math.abs(m)){if(u)return!0;m=z,h=x,p.copy(b)}}if(h!==-1){const x=this.createContactEquation(c,r,e,t,a,d);p.scale(m,v),v.vadd(s,v),v.vsub(n,v),x.rj.copy(v),p.negate(x.ni),x.ri.set(0,0,0);const f=x.ri,g=x.rj;f.vadd(s,f),f.vsub(c.position,f),g.vadd(n,g),g.vsub(r.position,g),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,s,i,o,r,c,a,d,u){return this.convexHeightfield(e,t,s,n,o,i,c,r,a,d,u)}particleCylinder(t,e,n,s,i,o,r,c,a,d,u){return this.convexParticle(e,t,s,n,o,i,c,r,a,d,u)}sphereTrimesh(t,e,n,s,i,o,r,c,a,d,u){const h=Is,p=Ns,v=Ps,m=Rs,y=Ls,x=qs,f=ks,g=_s,b=Fs,z=js;k.pointToLocalFrame(s,o,n,y);const C=t.radius;f.lowerBound.set(y.x-C,y.y-C,y.z-C),f.upperBound.set(y.x+C,y.y+C,y.z+C),e.getTrianglesInAABB(f,z);const F=Ts,P=t.radius*t.radius;for(let E=0;E<z.length;E++)for(let B=0;B<3;B++)if(e.getVertex(e.indices[z[E]*3+B],F),F.vsub(y,b),b.lengthSquared()<=P){if(g.copy(F),k.pointToWorldFrame(s,o,g,F),F.vsub(n,b),u)return!0;let S=this.createContactEquation(r,c,t,e,a,d);S.ni.copy(b),S.ni.normalize(),S.ri.copy(S.ni),S.ri.scale(t.radius,S.ri),S.ri.vadd(n,S.ri),S.ri.vsub(r.position,S.ri),S.rj.copy(F),S.rj.vsub(c.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult)}for(let E=0;E<z.length;E++)for(let B=0;B<3;B++){e.getVertex(e.indices[z[E]*3+B],h),e.getVertex(e.indices[z[E]*3+(B+1)%3],p),p.vsub(h,v),y.vsub(p,x);const S=x.dot(v);y.vsub(h,x);let A=x.dot(v);if(A>0&&S<0&&(y.vsub(h,x),m.copy(v),m.normalize(),A=x.dot(m),m.scale(A,x),x.vadd(h,x),x.distanceTo(y)<t.radius)){if(u)return!0;const q=this.createContactEquation(r,c,t,e,a,d);x.vsub(y,q.ni),q.ni.normalize(),q.ni.scale(t.radius,q.ri),q.ri.vadd(n,q.ri),q.ri.vsub(r.position,q.ri),k.pointToWorldFrame(s,o,x,x),x.vsub(c.position,q.rj),k.vectorToWorldFrame(o,q.ni,q.ni),k.vectorToWorldFrame(o,q.ri,q.ri),this.result.push(q),this.createFrictionEquationsFromContact(q,this.frictionResult)}}const O=Os,N=Vs,I=Ws,R=Bs;for(let E=0,B=z.length;E!==B;E++){e.getTriangleVertices(z[E],O,N,I),e.getNormal(z[E],R),y.vsub(O,x);let S=x.dot(R);if(R.scale(S,x),y.vsub(x,x),S=x.distanceTo(y),Y.pointInTriangle(x,O,N,I)&&S<t.radius){if(u)return!0;let A=this.createContactEquation(r,c,t,e,a,d);x.vsub(y,A.ni),A.ni.normalize(),A.ni.scale(t.radius,A.ri),A.ri.vadd(n,A.ri),A.ri.vsub(r.position,A.ri),k.pointToWorldFrame(s,o,x,x),x.vsub(c.position,A.rj),k.vectorToWorldFrame(o,A.ni,A.ni),k.vectorToWorldFrame(o,A.ri,A.ri),this.result.push(A),this.createFrictionEquationsFromContact(A,this.frictionResult)}}z.length=0}planeTrimesh(t,e,n,s,i,o,r,c,a,d,u){const h=new l,p=Cs;p.set(0,0,1),i.vmult(p,p);for(let v=0;v<e.vertices.length/3;v++){e.getVertex(v,h);const m=new l;m.copy(h),k.pointToWorldFrame(s,o,m,h);const y=Ms;if(h.vsub(n,y),p.dot(y)<=0){if(u)return!0;const f=this.createContactEquation(r,c,t,e,a,d);f.ni.copy(p);const g=Ss;p.scale(y.dot(p),g),h.vsub(g,g),f.ri.copy(g),f.ri.vsub(r.position,f.ri),f.rj.copy(h),f.rj.vsub(c.position,f.rj),this.result.push(f),this.createFrictionEquationsFromContact(f,this.frictionResult)}}}}const wt=new l,Et=new l,zt=new l,bs=new l,Es=new l,zs=new U,As=new U,Cs=new l,Ms=new l,Ss=new l,Bs=new l,Fs=new l;new l;const Ts=new l,_s=new l,Is=new l,Ns=new l,Ps=new l,Rs=new l,Ls=new l,qs=new l,Os=new l,Vs=new l,Ws=new l,ks=new tt,js=[],Ht=new l,Me=new l,Hs=new l,Ds=new l,Gs=new l;function Ys(w,t,e){let n=null;const s=w.length;for(let i=0;i!==s;i++){const o=w[i],r=Hs;w[(i+1)%s].vsub(o,r);const c=Ds;r.cross(t,c);const a=Gs;e.vsub(o,a);const d=c.dot(a);if(n===null||d>0&&n===!0||d<=0&&n===!1){n===null&&(n=d>0);continue}else return!1}return!0}const Dt=new l,Us=new l,Xs=new l,$s=new l,Zs=[new l,new l,new l,new l,new l,new l],Ks=new l,Js=new l,Qs=new l,ti=new l,ei=new l,ni=new l,si=new l,ii=new l,oi=new l,ri=new l,ci=new l,li=new l,ai=new l,hi=new l;new l;new l;const di=new l,ui=new l,pi=new l,fi=new l,vi=new l,yi=new l,mi=new l,wi=new l,xi=new l,gi=new l,Se=new U,bi=new l;new l;const Ei=new l,Be=new l,zi=new l,Ai=new l,Ci=new l,Mi=[0],Si=new l,Bi=new l;class Fe{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),s=this.current;let i=0;for(;n>s[i];)i++;if(n!==s[i]){for(let o=s.length-1;o>=i;o--)s[o+1]=s[o];s[i]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,s=this.previous,i=n.length,o=s.length;let r=0;for(let c=0;c<i;c++){let a=!1;const d=n[c];for(;d>s[r];)r++;a=d===s[r],a||Te(t,d)}r=0;for(let c=0;c<o;c++){let a=!1;const d=s[c];for(;d>n[r];)r++;a=n[r]===d,a||Te(e,d)}}}function Te(w,t){w.push((t&4294901760)>>16,t&65535)}const ne=(w,t)=>w<t?`${w}-${t}`:`${t}-${w}`;class Fi{constructor(){this.data={keys:[]}}get(t,e){const n=ne(t,e);return this.data[n]}set(t,e,n){const s=ne(t,e);this.get(t,e)||this.data.keys.push(s),this.data[s]=n}delete(t,e){const n=ne(t,e),s=this.data.keys.indexOf(n);s!==-1&&this.data.keys.splice(s,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class Ti extends qe{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new l,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new l,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new qn,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new fs,this.constraints=[],this.narrowphase=new gs(this),this.collisionMatrix=new ve,this.collisionMatrixPrevious=new ve,this.bodyOverlapKeeper=new Fe,this.shapeOverlapKeeper=new Fe,this.contactmaterials=[],this.contactMaterialTable=new Fi,this.defaultMaterial=new St("default"),this.defaultContactMaterial=new Ot(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof Xt?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,s){return n===void 0&&(n={}),n.mode=Y.ALL,n.from=t,n.to=e,n.callback=s,se.intersectWorld(this,n)}raycastAny(t,e,n,s){return n===void 0&&(n={}),n.mode=Y.ANY,n.from=t,n.to=e,n.result=s,se.intersectWorld(this,n)}raycastClosest(t,e,n,s){return n===void 0&&(n={}),n.mode=Y.CLOSEST,n.from=t,n.to=e,n.result=s,se.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof T&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,s=n.indexOf(t);if(s!==-1){n.splice(s,1);for(let i=0;i!==n.length;i++)n[i].index=i;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const s=e[n].shapes;for(let i=0;i<s.length;i++){const o=s[i];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=X.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const s=n-this.lastCallTime;this.step(t,s,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const s=X.now();let i=0;for(;this.accumulator>=t&&i<n&&(this.internalStep(t),this.accumulator-=t,i++,!(X.now()-s>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let r=0;r!==this.bodies.length;r++){const c=this.bodies[r];c.previousPosition.lerp(c.position,o,c.interpolatedPosition),c.previousQuaternion.slerp(c.quaternion,o,c.interpolatedQuaternion),c.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=Ri,s=Li,i=this.bodies.length,o=this.bodies,r=this.solver,c=this.gravity,a=this.doProfiling,d=this.profile,u=T.DYNAMIC;let h=-1/0;const p=this.constraints,v=Pi;c.length();const m=c.x,y=c.y,x=c.z;let f=0;for(a&&(h=X.now()),f=0;f!==i;f++){const E=o[f];if(E.type===u){const B=E.force,S=E.mass;B.x+=S*m,B.y+=S*y,B.z+=S*x}}for(let E=0,B=this.subsystems.length;E!==B;E++)this.subsystems[E].update();a&&(h=X.now()),n.length=0,s.length=0,this.broadphase.collisionPairs(this,n,s),a&&(d.broadphase=X.now()-h);let g=p.length;for(f=0;f!==g;f++){const E=p[f];if(!E.collideConnected)for(let B=n.length-1;B>=0;B-=1)(E.bodyA===n[B]&&E.bodyB===s[B]||E.bodyB===n[B]&&E.bodyA===s[B])&&(n.splice(B,1),s.splice(B,1))}this.collisionMatrixTick(),a&&(h=X.now());const b=Ni,z=e.length;for(f=0;f!==z;f++)b.push(e[f]);e.length=0;const C=this.frictionEquations.length;for(f=0;f!==C;f++)v.push(this.frictionEquations[f]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,s,this,e,b,this.frictionEquations,v),a&&(d.narrowphase=X.now()-h),a&&(h=X.now()),f=0;f<this.frictionEquations.length;f++)r.addEquation(this.frictionEquations[f]);const F=e.length;for(let E=0;E!==F;E++){const B=e[E],S=B.bi,A=B.bj,W=B.si,q=B.sj;let V;if(S.material&&A.material?V=this.getContactMaterial(S.material,A.material)||this.defaultContactMaterial:V=this.defaultContactMaterial,V.friction,S.material&&A.material&&(S.material.friction>=0&&A.material.friction>=0&&S.material.friction*A.material.friction,S.material.restitution>=0&&A.material.restitution>=0&&(B.restitution=S.material.restitution*A.material.restitution)),r.addEquation(B),S.allowSleep&&S.type===T.DYNAMIC&&S.sleepState===T.SLEEPING&&A.sleepState===T.AWAKE&&A.type!==T.STATIC){const G=A.velocity.lengthSquared()+A.angularVelocity.lengthSquared(),D=A.sleepSpeedLimit**2;G>=D*2&&(S.wakeUpAfterNarrowphase=!0)}if(A.allowSleep&&A.type===T.DYNAMIC&&A.sleepState===T.SLEEPING&&S.sleepState===T.AWAKE&&S.type!==T.STATIC){const G=S.velocity.lengthSquared()+S.angularVelocity.lengthSquared(),D=S.sleepSpeedLimit**2;G>=D*2&&(A.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(S,A,!0),this.collisionMatrixPrevious.get(S,A)||(_t.body=A,_t.contact=B,S.dispatchEvent(_t),_t.body=S,A.dispatchEvent(_t)),this.bodyOverlapKeeper.set(S.id,A.id),this.shapeOverlapKeeper.set(W.id,q.id)}for(this.emitContactEvents(),a&&(d.makeContactConstraints=X.now()-h,h=X.now()),f=0;f!==i;f++){const E=o[f];E.wakeUpAfterNarrowphase&&(E.wakeUp(),E.wakeUpAfterNarrowphase=!1)}for(g=p.length,f=0;f!==g;f++){const E=p[f];E.update();for(let B=0,S=E.equations.length;B!==S;B++){const A=E.equations[B];r.addEquation(A)}}r.solve(t,this),a&&(d.solve=X.now()-h),r.removeAllEquations();const P=Math.pow;for(f=0;f!==i;f++){const E=o[f];if(E.type&u){const B=P(1-E.linearDamping,t),S=E.velocity;S.scale(B,S);const A=E.angularVelocity;if(A){const W=P(1-E.angularDamping,t);A.scale(W,A)}}}this.dispatchEvent(Ii),a&&(h=X.now());const N=this.stepnumber%(this.quatNormalizeSkip+1)===0,I=this.quatNormalizeFast;for(f=0;f!==i;f++)o[f].integrate(t,N,I);this.clearForces(),this.broadphase.dirty=!0,a&&(d.integrate=X.now()-h),this.stepnumber+=1,this.dispatchEvent(_i);let R=!0;if(this.allowSleep)for(R=!1,f=0;f!==i;f++){const E=o[f];E.sleepTick(this.time),E.sleepState!==T.SLEEPING&&(R=!0)}this.hasActiveBodies=R}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(at,ht),t){for(let i=0,o=at.length;i<o;i+=2)It.bodyA=this.getBodyById(at[i]),It.bodyB=this.getBodyById(at[i+1]),this.dispatchEvent(It);It.bodyA=It.bodyB=null}if(e){for(let i=0,o=ht.length;i<o;i+=2)Nt.bodyA=this.getBodyById(ht[i]),Nt.bodyB=this.getBodyById(ht[i+1]),this.dispatchEvent(Nt);Nt.bodyA=Nt.bodyB=null}at.length=ht.length=0;const n=this.hasAnyEventListener("beginShapeContact"),s=this.hasAnyEventListener("endShapeContact");if((n||s)&&this.shapeOverlapKeeper.getDiff(at,ht),n){for(let i=0,o=at.length;i<o;i+=2){const r=this.getShapeById(at[i]),c=this.getShapeById(at[i+1]);dt.shapeA=r,dt.shapeB=c,r&&(dt.bodyA=r.body),c&&(dt.bodyB=c.body),this.dispatchEvent(dt)}dt.bodyA=dt.bodyB=dt.shapeA=dt.shapeB=null}if(s){for(let i=0,o=ht.length;i<o;i+=2){const r=this.getShapeById(ht[i]),c=this.getShapeById(ht[i+1]);ut.shapeA=r,ut.shapeB=c,r&&(ut.bodyA=r.body),c&&(ut.bodyB=c.body),this.dispatchEvent(ut)}ut.bodyA=ut.bodyB=ut.shapeA=ut.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const s=t[n];s.force,s.torque,s.force.set(0,0,0),s.torque.set(0,0,0)}}}new tt;const se=new Y,X=globalThis.performance||{};if(!X.now){let w=Date.now();X.timing&&X.timing.navigationStart&&(w=X.timing.navigationStart),X.now=()=>Date.now()-w}new l;const _i={type:"postStep"},Ii={type:"preStep"},_t={type:T.COLLIDE_EVENT_NAME,body:null,contact:null},Ni=[],Pi=[],Ri=[],Li=[],at=[],ht=[],It={type:"beginContact",bodyA:null,bodyB:null},Nt={type:"endContact",bodyA:null,bodyB:null},dt={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ut={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};rn.setupViewport();re.init({keyboardFallback:!0});const Z=document.getElementById("glcanvas"),M=Z.getContext("webgl2",{antialias:!0,alpha:!0});M||console.error("WebGL2 not supported");function qi(w){const t=w[0],e=w[1],n=w[2],s=w[3],i=t+t,o=e+e,r=n+n,c=t*i,a=t*o,d=t*r,u=e*o,h=e*r,p=n*r,v=s*i,m=s*o,y=s*r;return new Float32Array([1-(u+p),a-y,d+m,0,a+y,1-(c+p),h-v,0,d-m,h+v,1-(c+u),0,0,0,0,1])}function Oi(){const w=Math.min(window.devicePixelRatio||1,2),t=Math.floor(Z.clientWidth*w)||window.innerWidth,e=Math.floor(Z.clientHeight*w)||window.innerHeight;(Z.width!==t||Z.height!==e)&&(Z.width=t,Z.height=e),M.viewport(0,0,Z.width,Z.height)}function Vi(){Z.style.width||(Z.style.width="100vw"),Z.style.height||(Z.style.height="100vh"),Z.style.display="block"}Vi();function Wi(w={}){const e=w.resolution||20,n=w.pipRadius||.18,s=w.pipDepth||.25,i=w.pipSpread||.6,o=[0,0],r=[[-i,-i],[-i,i],[i,-i],[i,i]],c=[[-i,0],[i,0]];function a(f){switch(f){case 1:return[o];case 2:return[r[0],r[3]];case 3:return[r[0],o,r[3]];case 4:return[r[0],r[1],r[2],r[3]];case 5:return[r[0],r[1],o,r[2],r[3]];case 6:return[r[0],r[1],c[0],c[1],r[2],r[3]];default:return[]}}const d=[{n:[1,0,0],u:[0,0,-1],v:[0,1,0],val:1},{n:[-1,0,0],u:[0,0,1],v:[0,1,0],val:6},{n:[0,1,0],u:[1,0,0],v:[0,0,1],val:2},{n:[0,-1,0],u:[1,0,0],v:[0,0,-1],val:5},{n:[0,0,1],u:[1,0,0],v:[0,1,0],val:3},{n:[0,0,-1],u:[-1,0,0],v:[0,1,0],val:4}],u=[],h=[],p=[];let v=0;function m(f){const g=Math.hypot(f[0],f[1],f[2])||1;return[f[0]/g,f[1]/g,f[2]/g]}for(let f=0;f<d.length;f++){const g=d[f],b=g.n,z=g.u,C=g.v,F=[b[0]*1,b[1]*1,b[2]*1],P=a(g.val),O=new Array((e+1)*(e+1)),N=p.length;for(let I=0;I<=e;I++)for(let R=0;R<=e;R++){const E=R/e*2-1,B=I/e*2-1;let S=F[0]+z[0]*E*1+C[0]*B*1,A=F[1]+z[1]*E*1+C[1]*B*1,W=F[2]+z[2]*E*1+C[2]*B*1,q=0;for(let V=0;V<P.length;V++){const G=P[V][0],D=P[V][1],L=E-G,K=B-D,st=Math.hypot(L,K),it=n,pt=n*.6;let ft=0;if(st<it){const gt=Math.min(1,Math.max(0,(it-st)/(it-pt)));ft=gt*gt*(3-2*gt);const Vt=s*(.3+.7*ft);Vt>q&&(q=Vt)}}S-=b[0]*q,A-=b[1]*q,W-=b[2]*q,u.push(S,A,W),h.push(b[0],b[1],b[2]),O[I*(e+1)+R]=v+I*(e+1)+R}for(let I=0;I<e;I++)for(let R=0;R<e;R++){const E=O[I*(e+1)+R],B=O[I*(e+1)+R+1],S=O[(I+1)*(e+1)+R+1],A=O[(I+1)*(e+1)+R];p.push(E,B,S,E,S,A)}if(p.length>N){const I=p[N+0],R=p[N+1],E=p[N+2],B=u[3*I],S=u[3*I+1],A=u[3*I+2],W=u[3*R],q=u[3*R+1],V=u[3*R+2],G=u[3*E],D=u[3*E+1],L=u[3*E+2],K=W-B,st=q-S,it=V-A,pt=G-B,ft=D-S,gt=L-A,Vt=st*gt-it*ft,en=it*pt-K*gt,nn=K*ft-st*pt;if(Vt*b[0]+en*b[1]+nn*b[2]<0)for(let bt=N;bt<p.length;bt+=3){const sn=p[bt+1];p[bt+1]=p[bt+2],p[bt+2]=sn}}v+=(e+1)*(e+1)}const y=new Array(u.length/3).fill(0).map(()=>[0,0,0]);for(let f=0;f<p.length;f+=3){const g=p[f],b=p[f+1],z=p[f+2],C=u[3*g],F=u[3*g+1],P=u[3*g+2],O=u[3*b],N=u[3*b+1],I=u[3*b+2],R=u[3*z],E=u[3*z+1],B=u[3*z+2],S=O-C,A=N-F,W=I-P,q=R-C,V=E-F,G=B-P,D=A*G-W*V,L=W*q-S*G,K=S*V-A*q;y[g][0]+=D,y[g][1]+=L,y[g][2]+=K,y[b][0]+=D,y[b][1]+=L,y[b][2]+=K,y[z][0]+=D,y[z][1]+=L,y[z][2]+=K}const x=new Float32Array(h.length);for(let f=0;f<y.length;f++){const g=m(y[f]);x[3*f]=g[0],x[3*f+1]=g[1],x[3*f+2]=g[2]}return{positions:new Float32Array(u),normals:x,indices:new Uint32Array(p)}}const Zt=Wi({resolution:20,pipRadius:.18,pipDepth:.28,pipSpread:.6}),ki=`#version 300 es
precision highp float;
layout(location=0) in vec3 a_position;
layout(location=1) in vec3 a_normal;
uniform mat4 u_mvp;
uniform mat4 u_model;
out vec3 v_nrm_world;
void main(){
  vec3 n = mat3(u_model) * a_normal;
  v_nrm_world = normalize(n);
  gl_Position = u_mvp * u_model * vec4(a_position, 1.0);
}`,ji=`#version 300 es
precision highp float;
in vec3 v_nrm_world;
out vec4 outColor;
const vec3 LIGHT_DIR = normalize(vec3(0.6, 0.8, 0.4));
const vec3 BASE_COLOR = vec3(0.95);
void main(){
  float ndl = max(0.0, dot(normalize(v_nrm_world), LIGHT_DIR));
  vec3 color = BASE_COLOR * (0.25 + 0.75 * ndl);
  outColor = vec4(color, 1.0);
}`,Hi=`#version 300 es
precision highp float;
layout(location=0) in vec3 a_position;
uniform mat4 u_vp;
void main(){ gl_Position = u_vp * vec4(a_position, 1.0); }`,Di=`#version 300 es
precision highp float;
uniform vec4 u_color;
out vec4 outColor;
void main(){ outColor = u_color; }`;function _e(w,t,e){const n=w.createShader(t);return w.shaderSource(n,e),w.compileShader(n),w.getShaderParameter(n,w.COMPILE_STATUS)?n:(console.error(w.getShaderInfoLog(n)||"shader error"),w.deleteShader(n),null)}function Ye(w,t,e){const n=_e(w,w.VERTEX_SHADER,t),s=_e(w,w.FRAGMENT_SHADER,e),i=w.createProgram();return w.attachShader(i,n),w.attachShader(i,s),w.linkProgram(i),w.getProgramParameter(i,w.LINK_STATUS)?i:(console.error(w.getProgramInfoLog(i)||"link error"),w.deleteProgram(i),null)}const he=Ye(M,ki,ji),Ue=M.createVertexArray();M.bindVertexArray(Ue);const Gi=M.createBuffer();M.bindBuffer(M.ARRAY_BUFFER,Gi);M.bufferData(M.ARRAY_BUFFER,Zt.positions,M.STATIC_DRAW);M.enableVertexAttribArray(0);M.vertexAttribPointer(0,3,M.FLOAT,!1,0,0);const Yi=M.createBuffer();M.bindBuffer(M.ARRAY_BUFFER,Yi);M.bufferData(M.ARRAY_BUFFER,Zt.normals,M.STATIC_DRAW);M.enableVertexAttribArray(1);M.vertexAttribPointer(1,3,M.FLOAT,!1,0,0);const Ui=M.createBuffer();M.bindBuffer(M.ELEMENT_ARRAY_BUFFER,Ui);M.bufferData(M.ELEMENT_ARRAY_BUFFER,Zt.indices,M.STATIC_DRAW);const Xi=M.getUniformLocation(he,"u_mvp"),$i=M.getUniformLocation(he,"u_model"),$t=Ye(M,Hi,Di),Ie=M.getUniformLocation($t,"u_vp"),Ne=M.getUniformLocation($t,"u_color");function Zi(w){const t=w,e=[],n=[[-t,-t,-t],[t,-t,-t],[t,t,-t],[-t,t,-t],[-t,-t,t],[t,-t,t],[t,t,t],[-t,t,t]],s=[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7]];for(const[i,o]of s)e.push(...n[i],...n[o]);return new Float32Array(e)}const H=2,Xe=Zi(H),$e=M.createVertexArray();M.bindVertexArray($e);const Ki=M.createBuffer();M.bindBuffer(M.ARRAY_BUFFER,Ki);M.bufferData(M.ARRAY_BUFFER,Xe,M.STATIC_DRAW);M.enableVertexAttribArray(0);M.vertexAttribPointer(0,3,M.FLOAT,!1,0,0);const Ze=M.createVertexArray();M.bindVertexArray(Ze);const Ji=M.createBuffer();M.bindBuffer(M.ARRAY_BUFFER,Ji);const Qi=[[H,0,0,-1,0,0],[-H,0,0,1,0,0],[0,H,0,0,-1,0],[0,-H,0,0,1,0],[0,0,H,0,0,-1],[0,0,-H,0,0,1]],ie=.6,oe=[];for(const[w,t,e,n,s,i]of Qi)oe.push(w,t,e),oe.push(w+n*ie,t+s*ie,e+i*ie);const Ke=new Float32Array(oe);M.bufferData(M.ARRAY_BUFFER,Ke,M.STATIC_DRAW);M.enableVertexAttribArray(0);M.vertexAttribPointer(0,3,M.FLOAT,!1,0,0);function de(w,t={}){const n=new Lt(new l(.375,.375,.375)),s=new T({mass:1,shape:n,material:Qe,angularDamping:.2,linearDamping:.05});if(s.position.set(w[0],w[1],w[2]),t.initialVelocity){const i=t.initialVelocity;s.velocity.set(i[0],i[1],i[2])}else s.velocity.set((Math.random()-.5)*.5,Math.random()*.5,(Math.random()-.5)*.5);if(t.angularVelocity){const i=t.angularVelocity;s.angularVelocity.set(i[0],i[1],i[2])}else s.angularVelocity.set(0,0,0);return s.allowSleep=!0,s.sleepSpeedLimit=.25,s.sleepTimeLimit=.4,Q.addBody(s),{size:.375,body:s}}let $=[],Pe=!1,Rt=1;function Gt(w,t,e){return Math.max(t,Math.min(e,w))}let yt=0,mt=0;function to(){function w(s){const i=(s.beta||0)*Math.PI/180,o=(s.gamma||0)*Math.PI/180;yt=Gt(i,-Math.PI/2,Math.PI/2),mt=Gt(o,-Math.PI/2,Math.PI/2)}try{const s=window.DeviceOrientationEvent;s&&s.requestPermission?document.body.addEventListener("click",async()=>{try{await s.requestPermission()==="granted"&&window.addEventListener("deviceorientation",w)}catch{}},{once:!0}):s&&window.addEventListener("deviceorientation",w)}catch{}let t=!1,e=0,n=0;window.addEventListener("mousedown",s=>{t=!0,e=s.clientX,n=s.clientY}),window.addEventListener("mousemove",s=>{if(!t)return;const i=(s.clientX-e)/window.innerWidth,o=(s.clientY-n)/window.innerHeight;e=s.clientX,n=s.clientY,mt+=i*Math.PI,yt+=o*Math.PI,yt=Gt(yt,-Math.PI/2,Math.PI/2),mt=Gt(mt,-Math.PI/2,Math.PI/2)}),window.addEventListener("mouseup",()=>t=!1)}to();let Kt=!1;const Ut=new Float32Array([0,-9.8,0]),Mt=new Float32Array([0,-1,0]),At=new Float32Array([0,-1,0]);function eo(){for(let w=0;w<$.length;w++)try{$[w].body.wakeUp()}catch{}}function no(w,t,e){const n=w-At[0],s=t-At[1],i=e-At[2],o=Math.hypot(n,s,i),r=Math.hypot(w,t,e);(o>.05||r>.2)&&eo(),At[0]=w,At[1]=t,At[2]=e}function Yt(w=60){var t;try{const e=(t=window==null?void 0:window.creationSensors)==null?void 0:t.accelerometer;if(e&&typeof e.start=="function")return e.start(n=>{if(!n)return;const s=typeof n.tiltX=="number"?n.tiltX:typeof n.x=="number"?n.x:0,i=typeof n.tiltY=="number"?n.tiltY:typeof n.y=="number"?n.y:-1,o=typeof n.tiltZ=="number"?n.tiltZ:typeof n.z=="number"?n.z:0,r=s,c=-i,a=-o;Mt[0]=r,Mt[1]=c,Mt[2]=a;const d=Math.hypot(r,c,a),u=d>.001?9.8*Rt/d:9.8*Rt;Ut[0]=r*u,Ut[1]=c*u,Ut[2]=a*u,no(r,c,a),Kt=!0},{frequency:w}),!0}catch{}return!1}let lt=null;function so(){const w=document.createElement("div");w.style.position="fixed",w.style.right="8px",w.style.top="8px",w.style.padding="8px 10px",w.style.background="rgba(0,0,0,0.5)",w.style.border="1px solid rgba(255,255,255,0.2)",w.style.borderRadius="6px",w.style.color="#fff",w.style.fontFamily="system-ui, -apple-system, Roboto, sans-serif",w.style.fontSize="12px",w.style.zIndex="1001";const t=document.createElement("div");t.textContent="Tilt",t.style.fontWeight="600",t.style.marginBottom="6px";const e=document.createElement("div");e.innerHTML='x <span id="tilt-x">0.00</span> | y <span id="tilt-y">0.00</span> | z <span id="tilt-z">1.00</span>',e.style.marginBottom="6px";const n=document.createElement("div");n.id="tilt-source",n.textContent="source: fallback",n.style.opacity="0.8",n.style.marginBottom="6px",w.appendChild(t),w.appendChild(e),w.appendChild(n),document.body.appendChild(w),lt={panel:w,vals:e,source:n,xEl:w.querySelector("#tilt-x"),yEl:w.querySelector("#tilt-y"),zEl:w.querySelector("#tilt-z")}}so();var Le;try{const w=(Le=window==null?void 0:window.creationSensors)==null?void 0:Le.accelerometer;w&&(typeof w.isAvailable=="function"?w.isAvailable().then(s=>{s&&Yt(60)}).catch(()=>{}):Yt(60));let t=0;const e=40,n=setInterval(()=>{var s;if(Kt){clearInterval(n);return}try{const i=(s=window==null?void 0:window.creationSensors)==null?void 0:s.accelerometer;i&&(typeof i.isAvailable=="function"?i.isAvailable().then(o=>{o&&Yt(60)}).catch(()=>{}):Yt(60))}catch{}t++,t>=e&&clearInterval(n)},300)}catch{}function io(){if(Kt)return Ut;const w=Math.sin(mt),t=-Math.sin(yt),e=-Math.cos(yt)*Math.cos(mt),n=new Float32Array([w,e,t]),s=Math.hypot(n[0],n[1],n[2])||1;return n[0]/=s,n[1]/=s,n[2]/=s,n[0]*=9.8*Rt,n[1]*=9.8*Rt,n[2]*=9.8*Rt,n}M.enable(M.DEPTH_TEST);M.clearColor(.02,.02,.035,1);M.enable(M.BLEND);M.blendFunc(M.SRC_ALPHA,M.ONE_MINUS_SRC_ALPHA);let Re=performance.now();const Q=new Ti({gravity:new l(0,-9.8,0)});Q.broadphase=new Ct(Q);Q.allowSleep=!0;Q.solver.iterations=20;Q.defaultContactMaterial.friction=.4;Q.defaultContactMaterial.restitution=.25;const Je=new St("ground"),Qe=new St("dice");Q.addContactMaterial(new Ot(Je,Qe,{friction:.35,restitution:.05}));function Bt(w,t){const e=new Lt(new l(t[0],t[1],t[2])),n=new T({mass:0,material:Je});n.addShape(e),n.position.set(w[0],w[1],w[2]),Q.addBody(n)}const Ft=.02;Bt([H,0,0],[Ft,H,H]);Bt([-H,0,0],[Ft,H,H]);Bt([0,H,0],[H,Ft,H]);Bt([0,-H,0],[H,Ft,H]);Bt([0,0,H],[H,H,Ft]);Bt([0,0,-H],[H,H,Ft]);function oo(w){const t=io(),e=Math.max(-30,Math.min(30,t[0])),n=Math.max(-30,Math.min(30,t[1])),s=Math.max(-30,Math.min(30,t[2])),i=Q.gravity,o=Math.hypot(i.x,i.y,i.z)||1,r=Math.hypot(e,n,s)||1,c=i.x/o,a=i.y/o,d=i.z/o,u=e/r,h=n/r,p=s/r,v=Math.max(-1,Math.min(1,c*u+a*h+d*p)),m=Math.acos(v);if(Q.gravity.set(e,n,s),m>.2)for(let x=0;x<$.length;x++){const f=$[x].body;try{f.wakeUp(),f.angularVelocity.set(f.angularVelocity.x*.5,f.angularVelocity.y*.5,f.angularVelocity.z*.5),f.torque.set(0,0,0)}catch{}}const y=1/60;Q.step(y,w,3)}function tn(w){Oi();const t=Math.min(.033,Math.max(.001,(w-Re)*.001));Re=w,Pe||($.push(de([0,1.2,0],{initialVelocity:[0,0,0],angularVelocity:[0,0,0]})),Pe=!0),oo(t),M.clear(M.COLOR_BUFFER_BIT|M.DEPTH_BUFFER_BIT);const e=Z.width/Math.max(1,Z.height),n=hn(Math.PI/3,e,.05,100);let s=ln();s=dn(s,[0,0,-5]);const i=an(n,s);lt&&(Kt?(lt.source.textContent="source: gyro tilt",lt.xEl.textContent=Mt[0].toFixed(2),lt.yEl.textContent=Mt[1].toFixed(2),lt.zEl.textContent=Mt[2].toFixed(2)):(lt.source.textContent="source: fallback",lt.xEl.textContent=Math.sin(mt).toFixed(2),lt.yEl.textContent=(-Math.cos(yt)*Math.cos(mt)).toFixed(2),lt.zEl.textContent=(-Math.sin(yt)).toFixed(2))),M.useProgram($t),M.uniformMatrix4fv(Ie,!1,i),M.uniform4f(Ne,1,1,1,.2),M.bindVertexArray($e),M.drawArrays(M.LINES,0,Xe.length/3),M.useProgram($t),M.uniformMatrix4fv(Ie,!1,i),M.uniform4f(Ne,1,1,0,.7),M.bindVertexArray(Ze),M.drawArrays(M.LINES,0,Ke.length/3),M.useProgram(he),M.uniformMatrix4fv(Xi,!1,i),M.bindVertexArray(Ue);for(let o=0;o<$.length;o++){const r=$[o],c=r.body,a=new Float32Array([c.quaternion.x,c.quaternion.y,c.quaternion.z,c.quaternion.w]),u=qi(a).slice(0),h=r.size,p=r.size,v=r.size;u[0]*=h,u[1]*=h,u[2]*=h,u[4]*=p,u[5]*=p,u[6]*=p,u[8]*=v,u[9]*=v,u[10]*=v,u[12]=c.position.x,u[13]=c.position.y,u[14]=c.position.z,M.uniformMatrix4fv($i,!1,u),M.drawElements(M.TRIANGLES,Zt.indices.length,M.UNSIGNED_INT,0)}requestAnimationFrame(tn)}requestAnimationFrame(tn);re.on("sideButton",()=>{if($.length<8)$.push(de([(Math.random()-.5)*1.2,1.2+Math.random()*.4,(Math.random()-.5)*1.2]));else{const w=$.pop();try{Q.removeBody(w.body)}catch{}}});re.on("scrollWheel",({direction:w})=>{if(w==="up")$.push(de([(Math.random()-.5)*1.2,1.2+Math.random()*.4,(Math.random()-.5)*1.2]));else if($.length>0){const t=$.pop();try{Q.removeBody(t.body)}catch{}}});try{typeof window<"u"&&(window.__diceDebug={getSpeeds:()=>$.map(w=>{const t=w.body.velocity;return Math.hypot(t.x,t.y,t.z)}),getAngularSpeeds:()=>$.map(w=>{const t=w.body.angularVelocity;return Math.hypot(t.x,t.y,t.z)}),getSleeping:()=>$.map(w=>w.body.sleepState===2),getCount:()=>$.length})}catch{}
