{"version":3,"file":"static/js/690.64c8eed6.chunk.js","mappings":"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","sources":["sdk/web-r1-polyfills.js"],"sourcesContent":["/**\n * Web R1 Polyfills - R1 Creation Triggers Compatibility Layer\n * Implements R1 Creation SDK functionality for web browsers\n * Based on https://github.com/rabbit-hmi-oss/creations-sdk/blob/main/plugin-demo/reference/creation-triggers.md\n */\n\n/**\n * Initialize R1 Creation Triggers polyfills for web environment\n */\nexport function initializeWebR1Polyfills() {\n  console.log('Initializing R1 Creation Triggers web polyfills...');\n  \n  // 1. PluginMessageHandler polyfill\n  if (!window.PluginMessageHandler) {\n    window.PluginMessageHandler = {\n      postMessage: (message) => {\n        console.log('[Web Polyfill] PluginMessageHandler.postMessage:', message);\n        \n        try {\n          const parsedMessage = JSON.parse(message);\n          \n          // Simulate LLM responses for web testing\n          if (parsedMessage.useLLM) {\n            setTimeout(() => {\n              const mockResponse = {\n                message: parsedMessage.message,\n                pluginId: 'web-r1-tv',\n                data: JSON.stringify({\n                  response: `Web polyfill response for: ${parsedMessage.message}`,\n                  timestamp: new Date().toISOString(),\n                  webMode: true\n                })\n              };\n              \n              if (window.onPluginMessage) {\n                window.onPluginMessage(mockResponse);\n              }\n            }, 1000);\n          }\n        } catch (e) {\n          console.warn('[Web Polyfill] Invalid JSON in plugin message:', e);\n        }\n      }\n    };\n  }\n  \n  // 2. closeWebView polyfill\n  if (!window.closeWebView) {\n    window.closeWebView = {\n      postMessage: (message) => {\n        console.log('[Web Polyfill] closeWebView.postMessage:', message);\n        // In web environment, we could close the tab or redirect\n        if (window.confirm('Close R1 TV app?')) {\n          window.close() || (window.location.href = 'about:blank');\n        }\n      }\n    };\n  }\n  \n  // 3. TouchEventHandler polyfill\n  if (!window.TouchEventHandler) {\n    window.TouchEventHandler = {\n      postMessage: (eventData) => {\n        console.log('[Web Polyfill] TouchEventHandler.postMessage:', eventData);\n        \n        try {\n          const event = JSON.parse(eventData);\n          const element = document.elementFromPoint(event.x, event.y);\n          \n          if (element) {\n            switch (event.type) {\n              case 'tap':\n                element.click();\n                break;\n              case 'down':\n                element.dispatchEvent(new TouchEvent('touchstart', {\n                  touches: [{ clientX: event.x, clientY: event.y }]\n                }));\n                break;\n              case 'up':\n                element.dispatchEvent(new TouchEvent('touchend'));\n                break;\n              case 'move':\n                element.dispatchEvent(new TouchEvent('touchmove', {\n                  touches: [{ clientX: event.x, clientY: event.y }]\n                }));\n                break;\n            }\n          }\n        } catch (e) {\n          console.warn('[Web Polyfill] TouchEventHandler error:', e);\n        }\n      }\n    };\n  }\n  \n  // 4. CreationStorageHandler polyfill\n  if (!window.creationStorage) {\n    window.creationStorage = {\n      plain: {\n        setItem: async (key, value) => {\n          try {\n            localStorage.setItem(`r1tv_plain_${key}`, value);\n          } catch (e) {\n            console.warn('[Web Polyfill] Plain storage setItem error:', e);\n          }\n        },\n        \n        getItem: async (key) => {\n          try {\n            return localStorage.getItem(`r1tv_plain_${key}`);\n          } catch (e) {\n            console.warn('[Web Polyfill] Plain storage getItem error:', e);\n            return null;\n          }\n        },\n        \n        removeItem: async (key) => {\n          try {\n            localStorage.removeItem(`r1tv_plain_${key}`);\n          } catch (e) {\n            console.warn('[Web Polyfill] Plain storage removeItem error:', e);\n          }\n        },\n        \n        clear: async () => {\n          try {\n            Object.keys(localStorage)\n              .filter(key => key.startsWith('r1tv_plain_'))\n              .forEach(key => localStorage.removeItem(key));\n          } catch (e) {\n            console.warn('[Web Polyfill] Plain storage clear error:', e);\n          }\n        }\n      },\n      \n      secure: {\n        setItem: async (key, value) => {\n          // Web fallback: use sessionStorage for \"secure\" storage\n          try {\n            sessionStorage.setItem(`r1tv_secure_${key}`, value);\n          } catch (e) {\n            console.warn('[Web Polyfill] Secure storage setItem error:', e);\n          }\n        },\n        \n        getItem: async (key) => {\n          try {\n            return sessionStorage.getItem(`r1tv_secure_${key}`);\n          } catch (e) {\n            console.warn('[Web Polyfill] Secure storage getItem error:', e);\n            return null;\n          }\n        },\n        \n        removeItem: async (key) => {\n          try {\n            sessionStorage.removeItem(`r1tv_secure_${key}`);\n          } catch (e) {\n            console.warn('[Web Polyfill] Secure storage removeItem error:', e);\n          }\n        },\n        \n        clear: async () => {\n          try {\n            Object.keys(sessionStorage)\n              .filter(key => key.startsWith('r1tv_secure_'))\n              .forEach(key => sessionStorage.removeItem(key));\n          } catch (e) {\n            console.warn('[Web Polyfill] Secure storage clear error:', e);\n          }\n        }\n      }\n    };\n  }\n  \n  // 5. AccelerometerHandler polyfill\n  if (!window.creationSensors) {\n    let accelerometerCallback = null;\n    let accelerometerInterval = null;\n    \n    window.creationSensors = {\n      accelerometer: {\n        isAvailable: async () => {\n          // Check if DeviceMotionEvent is supported\n          return 'DeviceMotionEvent' in window;\n        },\n        \n        start: (callback, options = {}) => {\n          accelerometerCallback = callback;\n          const frequency = options.frequency || 60;\n          \n          // Try to use device motion events\n          if ('DeviceMotionEvent' in window) {\n            const handleDeviceMotion = (event) => {\n              if (accelerometerCallback && event.accelerationIncludingGravity) {\n                const { x, y, z } = event.accelerationIncludingGravity;\n                // Normalize values to -1 to 1 range (approximate)\n                accelerometerCallback({\n                  x: Math.max(-1, Math.min(1, (x || 0) / 9.8)),\n                  y: Math.max(-1, Math.min(1, (y || 0) / 9.8)),\n                  z: Math.max(-1, Math.min(1, (z || 0) / 9.8))\n                });\n              }\n            };\n            \n            window.addEventListener('devicemotion', handleDeviceMotion);\n            \n            // Store cleanup function\n            window.creationSensors.accelerometer._cleanup = () => {\n              window.removeEventListener('devicemotion', handleDeviceMotion);\n            };\n          } else {\n            // Fallback: simulate accelerometer data\n            accelerometerInterval = setInterval(() => {\n              if (accelerometerCallback) {\n                accelerometerCallback({\n                  x: (Math.random() - 0.5) * 0.1,\n                  y: (Math.random() - 0.5) * 0.1,\n                  z: 0.98 + (Math.random() - 0.5) * 0.04\n                });\n              }\n            }, 1000 / frequency);\n          }\n        },\n        \n        stop: () => {\n          accelerometerCallback = null;\n          \n          if (accelerometerInterval) {\n            clearInterval(accelerometerInterval);\n            accelerometerInterval = null;\n          }\n          \n          if (window.creationSensors.accelerometer._cleanup) {\n            window.creationSensors.accelerometer._cleanup();\n            delete window.creationSensors.accelerometer._cleanup;\n          }\n        }\n      }\n    };\n  }\n  \n  // Hardware Button Events polyfills\n  initializeHardwareButtonPolyfills();\n  \n  console.log('R1 Creation Triggers web polyfills initialized successfully!');\n}\n\n/**\n * Initialize hardware button event polyfills for web\n */\nfunction initializeHardwareButtonPolyfills() {\n  // Side Button (PTT) Events - map to keyboard events\n  let longPressTimer = null;\n  \n  // Map space bar to side button\n  document.addEventListener('keydown', (e) => {\n    if (e.code === 'Space' && !e.repeat) {\n      e.preventDefault();\n      \n      // Start long press timer\n      longPressTimer = setTimeout(() => {\n        const longPressStartEvent = new CustomEvent('longPressStart');\n        window.dispatchEvent(longPressStartEvent);\n      }, 500);\n    }\n  });\n  \n  document.addEventListener('keyup', (e) => {\n    if (e.code === 'Space') {\n      e.preventDefault();\n      \n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n        longPressTimer = null;\n        \n        // Short press - dispatch sideClick\n        const sideClickEvent = new CustomEvent('sideClick');\n        window.dispatchEvent(sideClickEvent);\n      } else {\n        // Long press end\n        const longPressEndEvent = new CustomEvent('longPressEnd');\n        window.dispatchEvent(longPressEndEvent);\n      }\n    }\n  });\n  \n  // Scroll Wheel Events - map to mouse wheel or arrow keys\n  document.addEventListener('wheel', (e) => {\n    e.preventDefault();\n    \n    if (e.deltaY < 0) {\n      const scrollUpEvent = new CustomEvent('scrollUp');\n      window.dispatchEvent(scrollUpEvent);\n    } else if (e.deltaY > 0) {\n      const scrollDownEvent = new CustomEvent('scrollDown');\n      window.dispatchEvent(scrollDownEvent);\n    }\n  });\n  \n  // Also map arrow keys to scroll events\n  document.addEventListener('keydown', (e) => {\n    if (e.code === 'ArrowUp') {\n      e.preventDefault();\n      const scrollUpEvent = new CustomEvent('scrollUp');\n      window.dispatchEvent(scrollUpEvent);\n    } else if (e.code === 'ArrowDown') {\n      e.preventDefault();\n      const scrollDownEvent = new CustomEvent('scrollDown');\n      window.dispatchEvent(scrollDownEvent);\n    }\n  });\n  \n  console.log('Hardware button polyfills initialized (Space=PTT, Wheel/Arrows=Scroll)');\n}\n\n/**\n * Check if running in R1 device environment\n */\nexport function isR1Environment() {\n  return !!(window.PluginMessageHandler && \n           window.closeWebView && \n           window.creationStorage && \n           window.creationSensors);\n}\n\n/**\n * Get platform info\n */\nexport function getPlatformInfo() {\n  return {\n    isR1: isR1Environment(),\n    isWeb: !isR1Environment(),\n    userAgent: navigator.userAgent,\n    platform: navigator.platform,\n    screenSize: {\n      width: window.screen.width,\n      height: window.screen.height\n    },\n    viewportSize: {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }\n  };\n}\n"],"names":["initializeWebR1Polyfills","console","log","window","PluginMessageHandler","postMessage","message","parsedMessage","JSON","parse","useLLM","setTimeout","mockResponse","pluginId","data","stringify","response","concat","timestamp","Date","toISOString","webMode","onPluginMessage","e","warn","closeWebView","confirm","close","location","href","TouchEventHandler","eventData","event","element","document","elementFromPoint","x","y","type","click","dispatchEvent","TouchEvent","touches","clientX","clientY","creationStorage","plain","setItem","async","key","value","localStorage","getItem","removeItem","clear","Object","keys","filter","startsWith","forEach","secure","sessionStorage","creationSensors","accelerometerCallback","accelerometerInterval","accelerometer","isAvailable","start","callback","frequency","arguments","length","undefined","handleDeviceMotion","accelerationIncludingGravity","z","Math","max","min","addEventListener","_cleanup","removeEventListener","setInterval","random","stop","clearInterval","longPressTimer","code","repeat","preventDefault","longPressStartEvent","CustomEvent","clearTimeout","sideClickEvent","longPressEndEvent","deltaY","scrollUpEvent","scrollDownEvent","initializeHardwareButtonPolyfills","isR1Environment","getPlatformInfo","isR1","isWeb","userAgent","navigator","platform","screenSize","width","screen","height","viewportSize","innerWidth","innerHeight"],"sourceRoot":""}